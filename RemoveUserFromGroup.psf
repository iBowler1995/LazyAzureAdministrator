<File version="3.2">
  <FileID>f6316fe7-2014-4abc-9137-e11d971d6202</FileID>
  <Preview>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
qCoAAAAASUVORK5CYII=</Preview>
  <Form>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
+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</Form>
  <Code><![CDATA[
$formRemoveUserFromGroup_Load={
	
	#TODO: Initialize Form Controls here
	$buttonRemoveUser.Enabled = $false
	$formRemoveUserFromGroup.add_Shown({ $formRemoveUserFromGroup.Activate(); $textUserEmail.Focus })
	$RemoveGroupMemberLogFolderExists = (Test-Path -Path "$Env:ProgramData\AzureAdministrator\Logs\RemoveGroupMember" -PathType Container)
	If (!$RemoveGroupMemberLogFolderExists)
	{
		
		New-Item -Path "$Env:ProgramData\AzureAdministrator\Logs" -Name 'RemoveGroupMember' -ItemType directory -Force
		
	}
}

$buttonRemoveUser_Click={
	#TODO: Place custom script here
	function Remove-AADGroupMember
	{
		
		[CmdletBinding()]
		param (
			[Parameter(Mandatory = $True)]
			[String]$UPN,
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$Group,
			[Parameter()]
			[Switch]$Multi,
			[Parameter()]
			[String]$File
		)
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		This function will remove an Azure AD Group Member.
		===========================================================================
		.PARAMETER UPN
		REQUIRED - Email/UserPrincipalName of user to remove
        .PARAMETER All
        Optional switch to remove specified user from all statically assigned groups (will not remove from dynamic, because dynamic)
        .PARAMETER Group
        displayName of the group to remove user from
        .PARAMETER Multi
        Optional switch to indicate we intend to remove the user from multiple groups. Must be used with -File parameter
        .PARAMETER File
        Location of the text file with multiple groups (one per line) 
		===========================================================================
		.EXAMPLE
		Remove-AADGroupMember -UPN bjameson@example.com -Group Azure-Test <--- Removes bjameson@example.com from the group Azure-Test
        Remove-AADGroupMember -UPN bjameson@example.com -Multi -File C:\Temp\groups.txt <--- Removes bjameson@example.com from all groups in the text file
        Remove-AADGroupMember -UPN bjameson@example.com -All <--- Removes user from all statically assigned
	#>
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		function Get-AADUser
		{
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$UPN
				
			)
			
			
			
			If ($All)
			{
				
				$uri = "https://graph.microsoft.com/v1.0/users"
				$Users = While (!$NoMoreUsers)
				{
					
					Try
					{
						
						$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
						
					}
					catch
					{
						$ResponseResult = $_.Exception.Response.GetResponseStream()
						$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
						$ResponseBody = $ResponseReader.ReadToEnd()
					}
					$ResponseBody
					$getUsers.value
					If ($getUsers."@odata.nextlink")
					{
						
						$uri = $getUsers."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreUsers = $True
						
					}
				}
				$NoMoreUsers = $False
				$Users | select displayName | sort displayName
				
			}
			elseif ($UPN -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
				Try
				{
					
					Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
				}
				$ResponseBody
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		function Get-AADGroup
		{
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$Name
				
			)
			
			$token = Get-MsalToken -clientid $ClientID -tenantid organizations
			$global:header = @{ 'Authorization' = $token.createauthorizationHeader(); 'ConsistencyLevel' = 'eventual' }
			
			If ($All)
			{
				
				$uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					Try
					{
						
						$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
						
					}
					catch
					{
						$ResponseResult = $_.Exception.Response.GetResponseStream()
						$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
						$ResponseBody = $ResponseReader.ReadToEnd()
					}
					$ResponseBody
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | select displayName | sort displayName
				
			}
			elseif ($Name -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					Try
					{
						
						$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
						
					}
					catch
					{
						$ResponseResult = $_.Exception.Response.GetResponseStream()
						$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
						$ResponseBody = $ResponseReader.ReadToEnd()
					}
					$ResponseBody
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | where { $_.displayName -eq $Name }
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		
		If ($all)
		{
			
			$GroupsUri = "https://graph.microsoft.com/v1.0/users/$UPN/transitiveMemberOf"
			$GroupRequest = Invoke-RestMethod -Uri $GroupsUri -Headers $Header -Method Get
			foreach ($Item in $GroupRequest.value)
			{
				
				$RemoveFrom = Get-AADGroup -Name $Item.displayName
				$UsertoRemove = Get-AADUser -UPN $UPN
				$RemoveFromUri = "https://graph.microsoft.com/v1.0/groups/$($RemoveFrom.Id)/members/$($UsertoRemove.Id)/`$ref"
				Try
				{
					
					Invoke-RestMethod -Uri $RemoveFromUri -Headers $header -Method "Delete"
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
			}
			
		}
		elseIf (($Group -ne $Null) -and (!$Multi))
		{
			
			$UsertoRemove = Get-AADUser -UPN $UPN
			$RemoveFrom = Get-AADGroup -Name $Group
			$RemoveFromUri = "https://graph.microsoft.com/v1.0/groups/$($RemoveFrom.Id)/members/$($UsertoRemove.Id)/`$ref"
			Try
			{
				
				Invoke-RestMethod -Uri $RemoveFromUri -Headers $header -Method "Delete"
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
			}
			$ResponseBody
			
		}
		else
		{
			
			
			$Groupstoremove = Get-Content $File
			foreach ($G in $Groupstoremove)
			{
				
				$UsertoRemove = Get-AADUser -UPN $UPN
				$RemoveFrom = Get-AADGroup -Name $G
				$RemoveFromUri = "https://graph.microsoft.com/v1.0/groups/$($RemoveFrom.Id)/members/$($UsertoRemove.Id)/`$ref"
				Try
				{
					
					Invoke-RestMethod -Uri $RemoveFromUri -Headers $header -Method "Delete"
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
				}
				$ResponseBody
				
			}
			
		}
		
	}
	#############################################################################
	function Get-AADUser
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$UPN
			
		)
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/users"
			$Users = While (!$NoMoreUsers)
			{
				
				$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getUsers.value
				If ($getUsers."@odata.nextlink")
				{
					
					$uri = $getUsers."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreUsers = $True
					
				}
			}
			$NoMoreUsers = $False
			$Users | select displayName | sort displayName
			
		}
		elseif ($UPN -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
			Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
			
		}
		else
		{
			
			Write-Host "Please specify individual group or use All switch."
			
		}
		
	}
	#############################################################################
	function Get-AADGroup
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$Name
			
		)
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/groups"
			$Groups = While (!$NoMoreGroups)
			{
				
				$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getGroups.value
				If ($getGroups."@odata.nextlink")
				{
					
					$uri = $getGroups."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreGroups = $True
					
				}
			}
			$NoMoreGroups = $False
			$Groups | select displayName | sort displayName
			
		}
		elseif ($Name -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/groups"
			$Groups = While (!$NoMoreGroups)
			{
				
				$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getGroups.value
				If ($getGroups."@odata.nextlink")
				{
					
					$uri = $getGroups."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreGroups = $True
					
				}
			}
			$NoMoreGroups = $False
			$Groups | where { $_.displayName -eq $Name }
			
		}
		else
		{
			
			Write-Host "Please specify individual group or use All switch."
			
		}
		
	}
	#############################################################################
	$UPN = $textUserEmail.Text
	$User = Get-AADUser -UPN $UPN
	$Selected = $listboxUserGroups.SelectedItems
	$Groups =
	foreach ($Item in $Selected)
	{
		Get-AADGroup -Name $Item
	}
	
	if ((Get-AADUser -UPN $UPN) -ne $null)
	{
		Start-Transcript -Path "$Env:ProgramData\AzureAdministrator\Logs\RemoveGroupMember\AddUserToGroup_$Timestamp.log"
		
		foreach ($GroupItem in $Groups)
		{
			Try
			{
				
				Remove-AADGroupMember -Group $GroupItem.DisplayName -UPN $UPN
				
			}
			Catch
			{
				
				[System.Windows.Forms.MessageBox]::show("Error removing user from group.`r`nError Message: $($_.Exception).`r`nFor more info, see logs.", 'Error', 'OK', 'Error')
				
			}
		}
		Stop-Transcript
		$formRemoveUserFromGroup.Close()
	}
	else
	{
		[System.Windows.Forms.MessageBox]::Show('Email does not exist.', 'Email Does Not Exist', 'OK', 'Error')
	}
	
	
}

$buttonLoadUsersGroups_Click={
	#TODO: Place custom script here
	function Get-AADUserGroups
	{
		
		[CmdletBinding()]
		param (
			[Parameter()]
			[String]$UPN
		)
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		function Get-AADUser
		{
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$UPN
				
			)
			
			If ($All)
			{
				
				$uri = "https://graph.microsoft.com/v1.0/users"
				$Users = While (!$NoMoreUsers)
				{
					
					$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
					$getUsers.value
					If ($getUsers."@odata.nextlink")
					{
						
						$uri = $getUsers."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreUsers = $True
						
					}
				}
				$NoMoreUsers = $False
				$Users | select displayName | sort displayName
				
			}
			elseif ($UPN -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
				Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		
		$User = Get-AADUser -UPN $UPN
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		$uri = "https://graph.microsoft.com/v1.0/users/$($User.Id)/memberOf"
		$Groups = Invoke-restMethod -uri $Uri -Method Get -Headers $Header
		$Groups.value | select displayName | sort displayName
	}
	$UPN = $textUserEmail.Text
	$LoadGroups = Get-AADUserGroups -UPN $UPN
	$listboxUserGroups.SelectionMode = 'MultiExtended'
	
	foreach ($GroupResult in $LoadGroups)
	{
		$listboxUserGroups.Items.Add($GroupResult.displayName) | Out-Null
	}
}

$TextUserEmail_TextChanged={
	#TODO: Place custom script here
	function Get-AADUser
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$UPN
			
		)
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Gets an Azure AD User
		===========================================================================
		.PARAMETER All
		Lists all AAD users by displayName.
		.PARAMETER Name
		The displayName of the user to get.
		===========================================================================
		.EXAMPLE
		Get-AADUser -All <--- This will return all AzureAD users
		Get-AADUser -UPN bjameson@example.com <--- This will return the user bjameson@example.com
	#>
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/users"
			$Users = While (!$NoMoreUsers)
			{
				
				$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getUsers.value
				If ($getUsers."@odata.nextlink")
				{
					
					$uri = $getUsers."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreUsers = $True
					
				}
			}
			$NoMoreUsers = $False
			$Users | select displayName | sort displayName
			
		}
		elseif ($UPN -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
			Try
			{
				
				Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
			
		}
		else
		{
			
			Write-Host "Please specify individual user or use All switch."
			
		}
		
	}
	###################################################################
	$buttonLoadUsersGroups.Enabled = $false
	$buttonRemoveUser.Enabled = $false
	$UserCheck = Get-AADUser -UPN ($textUserEmail.Text)
	If ($UserCheck -notlike '*does not exist*')
	{
		$buttonLoadUsersGroups.Enabled = $true
		$buttonRemoveUser.Enabled = $true
		$tooltipNotFound.RemoveAll()
	}
	else
	{
		
		$tooltipNotFound.SetToolTip($buttonRemoveUser, "User not found. Please try again.")
		$tooltipNotFound.SetToolTip($buttonLoadUsersGroups, "User not found. Please try again.")
		
	}
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>