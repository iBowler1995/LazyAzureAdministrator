<File version="3.2">
  <FileID>c033166c-8e78-45bf-88d0-71def41f6b2f</FileID>
  <Preview>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
BwAAAABJRU5ErkJggg==</Preview>
  <Form>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
B2FPUeXpvAMA</Form>
  <Code><![CDATA[

$formChildForm_Load = {
	
	#TODO: Initialize Form Controls here
	$buttonAddUser.Enabled = $false
	$Uri = "https://graph.microsoft.com/v1.0/groups"
	$Groups = while (!$NoMorePages)
	{
		$GetGroups = Invoke-RestMethod -Uri $Uri -Headers $Header -Method Get
		$GetGroups.Value
		If ($GetGroups."@odata.nextlink")
		{
			$Uri = $GetGroups."@odata.nextlink"
		}
		else
		{
			$NoMorePages = $True
		}
	}
	$NoMorePages = $false
	$Groups | select -expand displayName | sort displayName
	$listGroups.SelectionMode = 'MultiExtended'
	
	foreach($Item in $Groups)
	{
		$listGroups.Items.Add($Item.displayName) | Out-Null
		$listGroups.Sorted = $True
	}
	$formChildForm.add_Shown({ $formChildForm.Activate(); $listGroups.Focus() })
	$GroupMemberAddLogFolderExists = (Test-Path -Path "$Env:ProgramData\AzureAdministrator\Logs\GroupMemberAdd" -PathType Container)
	If (!$GroupMemberAddLogFolderExists)
	{
		
		New-Item -Path "$Env:ProgramData\AzureAdministrator\Logs" -Name 'GroupMemberAdd' -ItemType directory -Force
		
	}
	
}


$buttonAddUser_Click = {
	#TODO: Place custom script here
	function Get-AADUser
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$UPN
			
		)
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Gets an Azure AD User
		===========================================================================
		.PARAMETER All
		Lists all AAD users by displayName.
		.PARAMETER Name
		The displayName of the user to get.
		===========================================================================
		.EXAMPLE
		Get-AADUser -All <--- This will return all AzureAD users
		Get-AADUser -UPN bjameson@example.com <--- This will return the user bjameson@example.com
	#>
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/users"
			$Users = While (!$NoMoreUsers)
			{
				
				$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getUsers.value
				If ($getUsers."@odata.nextlink")
				{
					
					$uri = $getUsers."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreUsers = $True
					
				}
			}
			$NoMoreUsers = $False
			$Users | select displayName | sort displayName
			
		}
		elseif ($UPN -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
			Try
			{
				
				Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
			}
			$ResponseBody
			
		}
		else
		{
			
			Write-Host "Please specify individual group or use All switch."
			
		}
		
	}
	#############################################################################
	function Get-AADGroup
	{
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Gets an Azure AD Group
		===========================================================================
		.PARAMETER All
		Lists all AAD groups by displayName.
		.PARAMETER Name
		The displayName of the group to get.
		===========================================================================
		.EXAMPLE
		Get-AADGroup -All <--- This will return all AzureAD groups
		Get-AADGroup -Name Azure-Test <--- This will return the group Azure-Test
	#>
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$Name
			
		)
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader(); 'ConsistencyLevel' = 'eventual' }
		
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/groups"
			$Groups = While (!$NoMoreGroups)
			{
				
				Try
				{
					
					$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
				}
				$ResponseBody
				$getGroups.value
				If ($getGroups."@odata.nextlink")
				{
					
					$uri = $getGroups."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreGroups = $True
					
				}
			}
			$NoMoreGroups = $False
			$Groups | select displayName | sort displayName
			
		}
		elseif ($Name -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/groups"
			$Groups = While (!$NoMoreGroups)
			{
				
				Try
				{
					
					$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
				}
				$ResponseBody
				$getGroups.value
				If ($getGroups."@odata.nextlink")
				{
					
					$uri = $getGroups."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreGroups = $True
					
				}
			}
			$NoMoreGroups = $False
			$Groups | where { $_.displayName -eq $Name }
			
		}
		else
		{
			
			Write-Host "Please specify individual group or use All switch."
			
		}
		
	}
	#############################################################################
	function Add-AADGroupMember
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter(Mandatory = $True)]
			[String]$UPN,
			[Parameter()]
			[String]$Group,
			[Parameter()]
			[Switch]$Multi,
			[Parameter()]
			[String]$File
		)
		
		<#
        IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Adds user to AzureAD Group
        ===========================================================================
		.PARAMETER Group
		DisplayName of the group (how you see it in the GUI)
		.PARAMETER User
		User's email
        .PARAMETER Multi
        Use this switch if you have multiple groups to add a user to. Must be used in conjunction with File parameter
        .PARAMETER File
        Specifies the text file where you store each of the groups you want to add users to
        ===========================================================================
		.EXAMPLE
		Add-AADGroupMember -Group "Azure-Test" -User bob@Contoso.com <--- This will add Bob to the Azure-Test
        Add-AADGroupMember -User bob@contoso.com -Multi -File "C:\Temp\Groups.txt" This will parse the txt file and add user to all groups in it, if they exist
	#>
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		function Get-AADUser
		{
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$UPN
				
			)
			
			If ($All)
			{
				
				$token = Get-MsalToken -clientid $ClientID -tenantid organizations
				$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
				$uri = "https://graph.microsoft.com/v1.0/users"
				$Users = While (!$NoMoreUsers)
				{
					
					$GetUsers = Invoke-RestMethod -uri $uri -headers $Header -method GET
					$getUsers.value
					If ($getUsers."@odata.nextlink")
					{
						
						$uri = $getUsers."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreUsers = $True
						
					}
				}
				$NoMoreUsers = $False
				$Users | select displayName | sort displayName
				
			}
			elseif ($UPN -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
				Invoke-RestMethod -Uri $Uri -Headers $Header -Method Get
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		function Get-AADGroup
		{
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$Name
				
			)
			
			If ($All)
			{
				
				$token = Get-MsalToken -clientid $ClientID -tenantid organizations
				$global:header = @{ 'Authorization' = $token.createauthorizationHeader(); 'ConsistencyLevel' = 'eventual' }
				$uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					$GetGroups = Invoke-RestMethod -uri $uri -headers $Header -method GET
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | select displayName | sort displayName
				
			}
			elseif ($Name -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					$GetGroups = Invoke-RestMethod -uri $uri -headers $Header -method GET
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | where { $_.displayName -eq $Name }
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		
		
		If (($Group -ne $Null) -and (!$Multi))
		{
			
			$UserToAdd = Get-AADUser -UPN $UPN
			$AddTo = Get-AADGroup -Name $Group
			$AddtoUri = "https://graph.microsoft.com/v1.0/groups/$($AddTo.Id)/members/`$ref"
			$Body = @{ "@odata.id" = "https://graph.microsoft.com/v1.0/directoryObjects/$($UserToAdd.Id)" } | ConvertTo-Json
			Invoke-RestMethod -Uri $AddtoUri -Headers $Header -Method "Post" -ContentType "application/json" -Body $Body
			
		}
		else
		{
			
			
			$GroupsToAdd = Get-Content $File
			foreach ($G in $GroupsToAdd)
			{
				
				$UserToAdd = Get-AADUser -UPN $UPN
				$AddTo = Get-AADGroup -Name $G
				$AddtoUri = "https://graph.microsoft.com/v1.0/groups/$($AddTo.Id)/members/`$ref"
				$Body = @{ "@odata.id" = "https://graph.microsoft.com/v1.0/directoryObjects/$($UserToAdd.Id)" } | ConvertTo-Json
				Invoke-RestMethod -Uri $AddtoUri -Headers $Header -Method "Post" -ContentType "application/json" -Body $Body
				
			}
			
		}
		
	}
	#############################################################################
	Start-Transcript -Path "$Env:ProgramData\AzureAdministrator\Logs\GroupMemberAdd\AddUserToGroup_$Timestamp.log"
	$UPN = $textUserEmail.Text
	$User = Get-AADUser -UPN $UPN
	$Selected = $listGroups.SelectedItems
	$Groups =
	foreach ($Item in $Selected)
	{
		Get-AADGroup -Name $Item
	}
	
	if ($(Get-AADUser -UPN $UPN).userPrincipalName -ne $null)
	{
		
		foreach ($GroupItem in $Groups) {
			Try
			{
				
				Add-AADGroupMember -UPN $UPN -Group $GroupItem.displayName
				
			}
			Catch
			{
				
				[System.Windows.Forms.MessageBox]::show("Error adding user to group.`r`nError Message: $($_.Exception).`r`nFor more info, see logs.", 'Error', 'OK', 'Error')
				
			}
		}
		Stop-Transcript
		$formChildForm.Close()
	}
	else
	{
		[System.Windows.Forms.MessageBox]::Show('Email does not exist.', 'Email Does Not Exist', 'OK', 'Error')
	}
	$formChildForm.Close()
	
}


$textUserEmail_TextChanged = {
	#TODO: Place custom script here
	function Get-AADUser
	{
		
		[cmdletbinding()]
		param (
			
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[String]$UPN
			
		)
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Gets an Azure AD User
		===========================================================================
		.PARAMETER All
		Lists all AAD users by displayName.
		.PARAMETER Name
		The displayName of the user to get.
		===========================================================================
		.EXAMPLE
		Get-AADUser -All <--- This will return all AzureAD users
		Get-AADUser -UPN bjameson@example.com <--- This will return the user bjameson@example.com
	#>
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader() }
		
		If ($All)
		{
			
			$uri = "https://graph.microsoft.com/v1.0/users"
			$Users = While (!$NoMoreUsers)
			{
				
				$GetUsers = Invoke-RestMethod -uri $uri -headers $header -method GET
				$getUsers.value
				If ($getUsers."@odata.nextlink")
				{
					
					$uri = $getUsers."@odata.nextlink"
					
				}
				Else
				{
					
					$NoMoreUsers = $True
					
				}
			}
			$NoMoreUsers = $False
			$Users | select displayName | sort displayName
			
		}
		elseif ($UPN -ne $Null)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/users/$UPN"
			Try
			{
				
				Invoke-RestMethod -Uri $Uri -Headers $header -Method Get
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
			
		}
		else
		{
			
			Write-Host "Please specify individual user or use All switch."
			
		}
		
	}
	###################################################################
	$buttonAddUser.Enabled = $false
	$UserCheck = Get-AADUser -UPN ($textUserEmail.Text)
	If ($UserCheck -notlike '*does not exist*')
	{
		$buttonAddUser.Enabled = $true
		$tooltipNotFound.RemoveAll()
	}
	else
	{
		
		$tooltipNotFound.SetToolTip($buttonAddUser, "User not found. Please try again.")
		
	}
}

]]></Code>
  <Bookmarks>
    <Line>9</Line>
  </Bookmarks>
  <BreakPoints />
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>