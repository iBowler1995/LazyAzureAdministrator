<File version="3.2">
  <FileID>f1bb650a-aed8-4b94-ae7c-51245ba95f12</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAGrfSURBVHhe7d0FeBTn/vZxqBdKC21xiLuQ4JJg
wSW4u7trcXd3h7gT95AQJSFBgrtbqdP2nP/pe+R+n2cSpsjQFgqUnd6/q5+LZHd2dja72fnOZpMW
4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XA4HA6Hw3kD54xw/913371fqlTJ+127drnfu3fv+3379hX/
EhER/ba+yr+97/fq1fN+6dKl77/zzjv35X5FuCJ3Mpw3dIoWLfrDJ598gubNmmHQ4MHw8PHHsVOX
cfHal7hw5R4REdFvu3oP5y7fRHJqOsaPn4DmzZujVKlSEPuXXwp3NZw3cd566637zcTOf968hTh0
9BzSjl9BxolrREREzyX9+FWcOH8Dy1esRAsRAW+//faPhbsazps4JUuWvD9g4CBkHT2LjJPXkSoC
4OCxy0g5eln5l4iI6Dc9sr9IP3EdJy/cVF4J+LRUKQbAmzydO3e+v2O3F9LzryhH/6niDiQiInox
8lXk60hITkfvXr0YAG/yyDdu5J+5gqxTN5QAICIi+jMyT17H7S9/wODBQxgAb/LId/vfuPMNDp2+
idT8q0gjIiL6EzLFAeWNO99i4MCBDIA3eWQAXLv1FbJFAMg7Lp2IiOhPkK8oMwAMYNQAOHML6Rrv
6iQielPJl5oPnb6BnHO3cfg1yTl7S+zgrqvbIHd28jStZV+FnLO3let89Gsgn7+1ln1V5CvG8nof
bsOT5Pk37jIA3vgpCICvlQeV/C0Aeac+KT3/Gg4ek78d8PzSjl/VXCcR0Z8ld/6J2efgHZ6JfcGp
2BeS9mqJ6wiKO4w08dwmd8JS6tFLCIjJeW3X7xuRhQOHLyi3PVOESKbY4YYmHSk8/4nlXzZx/Z6h
6YhJP4VD4rZr3SeSDJIbd79jALzp83sBIHf+p658iZv3f3ghF25+rbyy8OR6iYj+jGxx1B136Cz2
BaXANzQNAZGZ8I/IeOW8Qg7CJyxD2Qb5hjev/enwDknVXPZlk7fRZ38qPIIOIklEgPwaBERnwzM4
Bf7hcplX+zWQ1+8blo59gcmIPJiv7OifvF8kBoCBzMMAyD1/F1mnbyov3Twq9fg13P7qAV50Hvzj
X0pEPLleIqI/I/fCXeXIe5dvAk5cvIOjF27jyPlX65i4nkP5l7F2R4Ty6qbcCa/fEYnc09dfy/XL
6zgubPWIRdiBY8gTz9vrdkUiKes0jl+6iyOveBvk9Z+4fFeJjd2BKThy8a7mfXP43B0GgCHM7wVA
Wv515Uj+Ree7H/8J+TuhT66XiOjPyCsMAI+gFBy7cAeJh8/jQO7FVyrlyCXknrmB9bui1ADYtDsa
R8/fEudfeGr5AheUP6yWfuIGMk7eFOS/Tyo4Xf7Y9NnruSiu7zyOiwjZ5ZuoBICMoPW7o5B+5KLy
Ju6kJ5dX1nUByWK75XN5wfXcFAdl15Gcd0ncnofbJZwQz/figO9AnriMuF0Fl398fQni+nPP3UJo
XI4SAHkX72neNwwAA5mHAZB3QdyRZ24pL908Sj44bhQGQGbeRSzfHo09Qen46psfldN+b2QAZIoH
15Prlb91kH32rvJAkZ8fOv3E+c8kHmDi35xzd5U3/jz8XHvZ56Bszx1le3LE5/JBrLnc75LfAIXb
d1Zu3+3CjwvO077M75G38WWsh0g/joidT2DsYXgEH1SOfuVOTvmLdK+QfMlfBsAGsdOXr2zKneKm
vTEiAG5rLi/J5UIScjBr8SaMnrQQ46YufcqYyYsxeeYqeIUmI1WEhfIeKo11yQCRt3WXXxLCk48r
O+ANe6KRJgJAvvQuz39s+aNyx38VMRknsWz9PnH9izB64kIsWrUbCYfOIDQxFzPmbyjYrilLsHnv
fnGbziP16BUlDpS/CCvWqXwsyK9xnrit++MPY0/gQRy59KXmfSMPKBkABjBKANz+WnwziTtS7LDk
TutRGadu4tuf/oUsccf3Hr8dTXqvQJtBa5X/+cMfme9+/D9kiXU8ud6c8/eRkXkQQbGZSDl+U1Tl
E+c/013knhUlGp8oHoRHkH72Hg5rLvecxPZkZqUjOCYNB46J7TkvQkBrud8lIuLCZSQmpCDq4Glk
nTyNyPA4RGVeQJbYdu3LaDssdvhKkMh1njyJCLGeyIzzz70eIj06KnY+QXG58AxORf7lL5UdZ5rY
2b5K8n1SeWdvYuOeGOWVTXkUvXlfrPIKhNby0uHz9zB36VZs2+6JzMwc4bCmsPBYTJy+TAkG+ed0
tdYlb+MJcVt3ywBIyVe+BhtFgKSLHb18Q6Lc6cu/xPco+fyxeV8YFixcg8OHjyrXtXjpBsxYsFGE
xyLs2xeArKzDyMs9jolTFiIk8XDBqxEiAgrWIWNCBklBlBy9cBeh8bnYG5SKY5fvP3W/SPKA8iYD
4M0fGQDXRQAcvSTuSLGzkTucR2WeuoWff/kP9gVnYMO+RJy7fBfLtsVg4iI/3Lr7beFu/tnz3U//
pxyhP77eezhy9hwiI8Oxb68fIrLO49D5Lx85X+z4REE+fpnC04TcczeQkXcaKeKb71DhTlL7Mo+S
5z3rfLE95y4gJiYSe3f7Iiz9DLJEEDy93G+sQ73ue8i7fAFRQUEIjD6CDPFkkZZzCqn58leVHi4j
/lWWf3RdD08r+Djv0lUcSEpBRFI+Ms5/JZ50xDdizknxBHD9d9bziN/8ehAZNrnzCYrLg2dIKk5e
ua/8j2gyxE5Sk9ihZv4W+eY18a/mZR+RJZY7eu4WNokAkK9syqNiGQDHRQBkyJfYNeRduI8J01cg
JSWj8FlRe+7d+xLDRs9SLpMpX5Z/Yj1Suvj+PyUCYI8IgIiDJ5SvgQyAzGPiuVA8z6oRJP9VXBNH
5HfgG5mG0RPmITU1S7mur7/+FjPnrMT2Hd745Zf/p5zm7bMfk75YhpjMU8qBn7xsuiTW9/D3+1OP
XcWxS/cQliACIDgNx698pXnfyANKBoABzMMAOH75K+VlG/mmkkflX/0KoUnH0XfiDqRkn1MeKN8/
+AcmLvZDvti5PZz//e9/j/37cL4XAaAU4aPrvfg1DueIo/+YdERHRSI4MQ9pp+7h6EWx8yxcJlc8
iBSPXO7X08QO+9JXSv0WnFdwuV+X/3U9T5+n4dLXyM1NR0hMqoiSaIQkZOPgyUe354l1iLpVL1v4
sTyv4LQvcfTKJcTuD0Nw3DFkXvhW+doefXiZR5Z/dJse//xLHLtyGXHhYQgIz0b6+a9xRFzuqLzN
D7dJWc8jl3m4/kfkypB44jQivcgXO5+Q+CPKu/ILAkDupJ/eaUpyhyrPTxM7sGd5uNyTl31Ultjp
HzkvAkDsdA+JnaR8qVwGQP6lu8pltRy9+BWmzFqNhISDynOi3OmOnzgP02cuxeSpi8SR+Vr8+9//
xo0btzBy3FzlMlknbz61HilDHEicErd1t98BRB08qXwNNu2NVQJAPs/KVw5k7DzupvIq7J6AeAwZ
NQMxsQeU7bhz9x4ePCj4Ue72nV4YNXEB9oujf7lshryuwssrYVRIxoB8tUUGgPyVwxNXv9a8b46J
A8qb975nALzp8zAA8uUdKXYu8udqjzpz61ts8EpB20HrkHnkovJgkbN4SxROnCsIgJ9//hn9+vbB
N998Ix7kCejTu6eoyl+U877/+V/Kkeiv6xQ7t6t3cDA+FmFJx5B14hhCQlOQdFSUtYiNI+cvIS4i
BN7ePvAOjETcsXs4nH8cEUF+8PTyhm9EGlLFTi81JRnhsUeQeek75J87jeiIMHh6+sA/PgWhQfGI
z70mviHOIDokBpHx8fD29YWnfzgiD10X1fzlE9tzF6mJ8QiNzxNVn4/Q8GTl8gXbI9YRGovog2kI
9A+Ap18IQjNEBYvbkHU4GxFh8YhMToavhwe8xO04cOxLnLh+BbGh4eLJKR/Zl68iPjwO0VkXcViE
gHylIS4sGF7itngHRYjbJ77up84jNsIPXj6+8AiMR2zeBWRkHoD3zp3YtXsf9oVlikA6i8SoeERn
FK4nPxchAUFiPT7wCghFdK74ppPblJuDyOAYhMXFwMPTE97ya3tcnPfYbSYyfCeufY2QxKPw2p+G
0+LjTLmjO3nrcacK7PCKxBixgxsxdjZGiZ3sk+SR95RZq8RBSZY4gr339HoKZZ++rbzcv0ns9OXP
uuVR9maPOOVl+YfX9aRjV77F1DlrERoajX//v18wbsIcLN3gLQ4QcrDLXzxf9h+Pu3fu4vTps0oA
ZJ2Sf2hH/rGfp9eVKbZB3tY9AcmISjupfA027YtDlnxvgnhezBThIHfg8k/xSjJYCt6DJQ/CvsQu
v1gMGj5dHOjE43///Q9++df/Yes2D4wQ1yvfp5Arng/l+58yxTrkeh6SnyvEuk6I58WwxCPw2J+O
k9e/0bxv5CsDDAADmIIA+EY8kL5RjqifdPb299jsl4qOwzeKHfEVZacuZ9HmSDUA/vvf/+LK5ctK
xd65cwchwcHoLSJAzoN//D/kKkevheu8LGLjwmnxAExC7KErOH7zDhIjopQfA+TKVyFyUuAVlooU
sROUf+jiyLlrSEmJg3dkDjLzLytvsDt67QYOxEYhMPQQMq/dxoGYEPiLneSBY6JQU6PhscsbYdlX
xTfycQTu2QfPqDwcOn5K7ED3wyMoAxniAXzske05cfEcoqNFUadfxPHb95AUHYPw9DNiR/utWO4E
QvZ5YG9ACpKPn8PBg3Hw8Y9HioiarJwD8NzqiYCE4+IbLR+RoWI7oo8g+/pNJITJADiBnKuXEOUX
jLC0Czh8UcZAEPxjc5F+7KKIn8vIuXBfHCHcQc6J88g4lo/oqCgEhGYi/cJlEQr7xcdpOHBK7MCv
nEOkjI/Uczh86TyiAv0QmHhKHBFcxMHUOPgGJCBZHPHLbfLY4YPAg2eRe/Qw9gcEwz/hJA6Lb1T1
NhPpwMkb34oj1sIAEI/vgp3f4zvMQ2fuiCPXmxgzYT6OHsnHzZu3n8nHdz9mL96q7LCfXM9Dckf6
MACUI+7j1/5QAEybuw4BAfvx008PMGvOcgwYOg3jJi8SQTIHQ0dMw7Vr15GXd/S5AiA6/ZSyA/7d
ABD/yh8TRqQcxdgpi7Fuw05xe2/gxo0buHXrFs6dPY8Zs5Zj9pLNSMo9r9yuPxoAp8R9oHXfyANK
JQAGMADe6HkYACevi53d5ftPOXfnB2zxS1MCIPnQWfznP//Fv375N+auD8PJ87/+CEDOnTu3sXTp
EuWVgP0hIfj6q/v48Z//D3nyKLtwfcevf4cjuakIikhCXO515fdW0w+Ew1PswDPP3sOxE1nwEzvM
/QfPiXC4j/wr4sGYHieOvCMRc/iG2Il9hRM3byI5PgbBEbnIvngeEeEJiFFi4gHyL59CuPhGjlIC
IB/7vcTHR+7g5K2vkJObjkDvWBw4941Yb+H2XBPbcyQTIREJiM65JupVPGGkRMEzNBWpp8UDWawv
zGc/Ig5dxdEbP+CY+GaJCQ9EdL7Y2WYfRKBvHA6c/Qanbj9AdmYS9kcnI/XibSSGh2N/wgkcvnYZ
MYGhiJBH7ifyEOgVjfjTd5Avvg75V7/BcfGNcuLCFaQmx4jb6A+PPR7wDcvCoRv3kCIiZ3/MUWRf
+xGnrl9AtFhPuAyJU3I9UYg/JdYjbvOxsxcQExGAKHGkL7cpQG7TuR9EvN0SX6doBIn1ZVwR11d4
m4n04NTN77A/6dgfCIAbGDpqBk6eOInvv/8WX4nnpSf94+cHyvOO3FH/bgCI5wgZAPJn3fIlcSUA
rogjZ3G+luPyFYDZa+DrG4xvvv4K586dw/Hj+Th27Lji9OkzuHtX7PQP5WDEmNnKzl++0qC1Lvkq
hAyA3f7JiEk/reyAN4nrlwEgfy1SHiDJy//qljj9PmLS8pU3/K3bsENc1x3cEc8NS5ZtwD5Pf3x1
/0tcunQJX8xcijmLNytv/JOv2mbL38yS6zsj11kgSzgpnrNkAHiGZuC0uA+07ht5QHmLAfDmz8MA
OHXjO+VlmyddvPcAm31TlXf+dxyxEcfP3MCewHS0HbwOl659Wbjrh/KSf05ODr4VO385OTnZGD5s
CP713/+Jo+yH6xOhIcrzQFw49u3cBw/fAHgLXt6e2L07FPEnxDeL2I78i7fETjhSHGkHISJX7ISv
fYvjZy+KI3g/eIYkKUffqYnRSgDkXLqASBEAsWKHf+L2jzh5ReywZQDkXEXu+XyEeYcjPv9LEQ33
kX0kA8G+seJI+VulYuX2nBIxkZIUBY+de3/dHh9P7NoZjNhjN3D02hmEiwCIyruNE7dEAJw5gfDA
IMSevIdDOSkI8k/AwYs/4uzdb5GZGovg8FSkX76NpIhwhIoj79zrV5QAiMy8hFxlxx2DxDN3xfb8
gBM3vsepq7eQfjAR/iFZyLp+V3ycjNDIDGTduIPk6EiExBxDzvWfxDdaQQBEpF9A7ukjSkgknL6n
3Obj5y4iLiIIMSfFE0BOKoL9EkWEPMBp8U2ekihCKfwQMq+I61NuM5E+nL71vfK78N4yAG6IAJBH
q4U7qYcOnZVvZL6JURPmISIiRnmOysgQQfyEI0eOYsOG7Zi7bDuOXRUB8MR6HpK/KSV/D1/+3F++
90b+XHyL2AGflAEgwv7xnW+B41e/w6xFm7Fly25xPUfENhzG4cO5v8op+DcsNBJjJi1Q3rQnaa1L
vjogb6t8BSA244yyA34YAEfFgZb8VWb5rv9H5YuDnJ2+0Zg6faFy3fn5+Vi5ajMmzVgpvi4L4OUV
gHwRJMnJKRg1Zhai0k4o77F6cj2S3K5TIrbCEvKUADgj7gOt+0YeUDIADGD69hYBcOcb8UD6XnnZ
5knn7zyAV1QuRs3xxLCZ+3BaHLH7Reagk4iBi0/8KuB//vOfwo8KPv7555/w4z9/UQJAWd/1H3Dy
VC5CQiIRLnaIx6+KWrwojvovXxNHzL4ITD6rfFPlnrmGQ0fyERsVhtCsazh24aYo0WvIzExHWGS8
2PHdQFqCPLLNQfbNezgYEwS/sAwk599UXi3w3uePiLwbOHIhH6Ee+xF7/MuCVwDy0pQd54Hz3+Gk
qGi5PadOHxPfeBEITb2A49cKt+fKTRyI9Edg0knkXDyLSB8f+MYeRdaJC0hNTYB/kDhCv3UfObkp
8N0bhLDMy8g7eQyRodHYf+Acjn15Ewn7QxESLwLghggAvxBEiGWOXLmBxEixrTF5yDh+Sdwm+QYh
cVvE0b93aBayz51HfFQofPdniPV/hdQ4+WOOg0g+Ld9XIALAPwRh6ReRd1Uc8Qf5IzjpNDJPXERq
2gEE7hfbdFM8CeUcRKBPPFJEAJy5cxsp8XIdIi6uPii4zU/cv0SG6uztH0QAHIfP/nScEztC5W9u
PLHDKvgNmbvY7hWJUePnYtiomeIoe9ZTho74ApO+WI7guEPP3PlJ8vnpxKV7SgDIN97Kl8S3ih3w
aRHX8reotC5z5OJ9BEZnYuL0pRg68gvN65fbNXr8POwSO2r5a4Nym7XWJXfA525+i70yADLPKDtg
+QpE9gnxPCmeZ3PE9snLKs+jysfy5/HfIP7QGcxdvAnDR8/EELENX8xdi/isM8qvYY+fsljZrpHj
ZmPlJi/lFZMjF79SXgXIFZeXbyZ++HWU6zsrvtYRiUfgFZqp3Ada9408oLz15fcYwAB4s+dhAJwR
R7fyZZsnyZ333e/+gf/+73+Kh7NoU4T6HoDfmgf/+EXsUL9W1nXq5o/Iy8tCREIa0s5+qzx4T14X
R8HiwZJ3+KDYoR1DdnYGAoOC4OkdpLwDPueKeNBnJMLL10+U6n6EJp3C0S/vIyM1FVEJx5Fz42ec
PZuPiPAQeHj7I+hACoK9IhB3VOxcL59DbFiS2IF+hVPyjx3l5yEqTFz3RXGdomLl9hw5ehiR8clI
OS2/BnJ7vhOn/4CjIhaCxYP80LlTiPILFUfR4fD284dPUATij38rjq6/QnZeJkI8ghAUFQ4vTy8E
xOYg84LYnjvyRxQHEJ12Hkdv3kBSVCLiD1/HcXnUf/kMooKClTc5+gRHI/HUtzh2RlxHkA88A8MR
sD8OsQePIPvGP3HsaA7CAuWbAMUR/LlLSI5JQlzOVRy/8T1OnD2KUPF18vL2g29wElLE11Nu02F5
eyIykXFZBsBdpKfJr9Mx5Fx7oNzmJ+9fIkN1ThychCfnwyc0HeeVAJA7TS1yh3pPOXrWellfkj9b
l0fwcjntdRSQv4EkA0Ae9cs3EMufj2/zjC8MgGdfVq5XHsHL69G6/gLyb3/89vXL2yhv677AFMRl
nVV2wFvE9eeIAMgXz7N5F758wr2Cf0WEyG0veHXhtvKx3MnLOJE7dnmaPE8ue0TIfXj58w/XUyBX
fH5WHCxGJh2Fd3iWch9o3TfygPLWlz8wAN70kQFwQwTA2dviCPH6t085Jurx/g//V7g7B66KI9ND
xy5j1BwvnDx3q/DUZ8+Df/4ijvQL3mPwkNzhy59dPXrayec5TT1PHMmLj0/d+lHsdH/C2bv/wMnT
hxAgX2Y/JX/uL47wC5cp8OtlHvWs7ZEvr524egYRvmGIPXoH+fIle2UdP4id7X1kHxaREHAAaVce
4LS8vLKewvU/sk5l/YXrfdZ1qacpHz+9DunRyz66zsdv16MfC8plnr7NRIbu/N0fEZFyAn5hmbgk
Pj58/r7YST2D3Nld+vp3aV72EfJXceXOXgaA/Nsp8ufiMgDkKxDyOrQuU+APXv9vrkPsrMVtvCR2
uvsCDyI+65zYAf+IreL6c0/fFM9V32heRiF29HLbj4nrkG98lq9yyNNkBCi/XixOO3rpm4LtEKcr
5xVeVvm38LRccf3nRXREJx9XAkDeB1r3jTygZAAYwDwMAPlAKtjBPO74tW/x1YNfAyBClN+MlcFY
vCkSX371feGpz56f/+/fys/w1XWKMpR1+Oh1PHZ64b8PPXqe5mm35BH0JaTnnkBq3mlEh4ijdHEE
nHVZVKh4EKrLKx65/EOF63nstMLT5YP45LXTCPcMRsyRuyIoxFG1svwPOHPva2TnpCDQJwFpV0V8
3HpiPcpyBR8r21n48cNtUGmdJvy6jic/115PwWm/XuaZnxPpxIV7PyHy4An47E/Dta/+gQviIOCC
eB57lS6K61QCYF+c8pK7PHLe6hGPC+L7/+LdV3/98jZevf+T8ltJCYfO47zYnq2eCTh88jouffkz
zotlzt+WHjxCfC6iQT394TLKaY8qPP2x0570o/K1lvsBn/BDuCCuU+u+kQeUDAADmN6FAXBePHgf
3aE8dFLsaG598w/l3fzSz//6N/75//6LX/4jdu7/+o96+rPIVw/kOrTW/ef9II78v0XOoQyEhgTD
PygUAfszkHHxa5wRD/KCnfWLkwFw+sZVJMdnIFX5McLDAHggrvcbHD1xHPGJR5Bz7Uc1AIjo9ZBH
n2nHrsF7fzri004iLfciDh6+8EqlCuEJR+AXmS2OdOU74L+CT1gmIg8cU87TuszLJG9jnIgeb/k+
oVO3cEF8DYLjjyAk9jBSss+LbbiobIcWeXmt05+HvP6kzDPwDctAQlZBgGjdN/KA8jYD4M2fhwFw
4e7PYucmjmyfcFY4feMHnJI/q1d+Xl/wuXLao6c/g1xOrkNr3S+H2BnfFuV795/iiEAcBdz7GefE
jvrlXeePOCe+NudE0T6+Tnm9P4nrldf36OlE9DqcFd/n58QRaWreVewNSsOewFTl31dJXofc+R+9
8JXynCCvP/fsPXiHHXpt1+8RIg5yjt9Qrls+15289h1C4o8WXv+r3QblOoT4zHPi6y8PfORB0dP3
zfk7PzEADGEKAuBbXBQ7T3lnGiS5c36U1jJ/xrPW+6quj4j+GPH9d+HuT7h0/5+vz5f/UI5wH26D
fEldnqa57CvxD+UV24fXL0Pg4mu9fnmw9fNvPvfJA0oGgAGMGgDiAaTu0AT58vflr/6Fu/8ARMwR
Eb2Zfv6L8PqV/cOVr39R9heP7j9kINy+zwB44+dhAFz68p8FLykVuiru1NjUI5i1YCUWLN9ARET0
mJkLViDyQI6yv3h0/yFfUWYAGMD07tVbMwBk3a3d6oGPP/oElSoZExERPeaj4iWwdM1W3P0Zj+0/
lAD48gf07z+AAfAmz7MCQPyHzbv9ULmyCezsnYiIiB4jI2D15j3KAeOj+w8GgIEMA4CIiF4EA8DA
hwFAREQvggFg4MMAICKiF8EAMPBhABAR0YtgABj4MACIiOhFMAAMfBgARET0IhgABj4MACIiehEM
AAMfBgAREb0IBoCBz18TAM6wtbaDuYUtrG2rwF5zmT/IoQqsLG1hYe0IWzsHWFrYwNKmCmy1lv2j
CtdjYSPWqXU+0W+wt3eElZUNzMysYWZuDVNzW1iJx7nWskSGjAFg4POXBICNLRxquaGZmxuqOTn9
iSfHKrCxrYE6jZqhgUttODq5omnb9mharxYcxZPwH9152ysRYQNzS3vY2Il4cKqvrKeZXOdzrIfI
3s4e5lbOqF6/DTp07YHOXXqgU9sWqF2tGmwZAaQzDAADn9cfAFXEkZEDui/wx/GcGEzu3ggWZjYv
uJO1g4lRe8wJjIf/6sFo6NIHy/38sXJIa9SwtYW1ndZlniQiwqYG6rq1RlO3+nC2FSFQdwhW+gVg
zQh31BTrsbLVuhzRkxxhISLSodkYrPFNQm5uOlJS0nEyPwxze7ujiqkNrDUvR2SYGAAGPq89AKwt
YdJgrFi3F+KOZWHvrGFo7mwFcxt5vjh6MhUfi6NxE2NzGBlbwMzKUTlCt7G2hZk4z8zCGsZGZjAS
T6aWNnYwNeqAuYEJ8F83As3sTFGpsgVMLR1EUDiL9TmI9VnASC5vYgkLG3GarTzNHJWNBBMrcZol
KpZugnE7ohC0cxwam1aEsZUdzE0eWY+IAFPxuZG4jFyPubV81cDp120ytxLrk9tkLbap4DwrS7Gd
xmaoLG6HXI9c1kSEjpUdjwL1ykbc59YuQ7E08ADCN41AE9uCx1ibiZMxpH1n1LG0gol4vJiaWsLY
RDxW5KtNNuJxIR/rymNUPh6dlce7tZU1TM1ExIrHn72DIyzFY8zMwh424mMLM/E9YiG+R+RjW1zW
xMKhYBvsCh7byrrE9SjremIbiV4mBoCBz+sOACuxA204bgu8t8zDyOnr4LV7GQa2qime7Bxg79gI
rbp1RTO3DhgwahzGDBsId1cnsQOtipqurdG6Yye0btUDIydPxvAe7qhb1QrlK7bH3IA4+K0dhiY2
1dCoYze0algXjmKnbW5RDU16jsCY8VMwZvhQuLuIo7MaDdB+wCSMnzAJYwd1R+PqteAkgmTbgcNI
j9+HJYPcUad6QzRq3wWtG9cT67GBmYMbug4ag3ETJmPUkH5oVkM8icttcmmFVt27o0OnAZg4cSKG
dm+HetUdRBA4oGazrug/ehImiOvp694A1Rq0ROdO7nCpypeCdcnOXuyQ66LPogBEhW5C/1pGqCQi
1cTIBOXKGaGyuXxFqgFadOmKjj2GYPjQXnBzcoK1Uwv0Gj5eeTyO6N8dDZ3lDr066jbpIB5XrVHH
0Q6WVrXRyL0r2rVqhKo2ddCkYxc0a9IevQaKx/aYkejWtBasrGWs1kXLPqPE43SKeJz2R6t6DrDm
q1f0CjEADHxeawCIJ0kj0yaYuNUbO5cMR237LlgT4oP5A9vCUYSBXdVx8DpxDIlB/ggKjcOBjKM4
uHsEapvXhvvQ7ThwKQ+Ru/cgID4Px7NisHFiM5iVaYWZ/iIA1gxGQ8tuWJeeAY/pnVDbqgqa9VkE
/+QDiI5LwH6fXZjY1gZOrm0xcV0gPD3DkZYUhW1zJ6D74FWIu3AF507mInXXdLRxGYblianwntMd
dazqot0XfkgV1xcdm4i45MMIXd0NdSxqwX3wNiRdO44YL28EpRzDqaMx2DCkESpatMHcbYGITEpE
aFgUNox3h+vEXTiZ64exTV1gLY7Y+L4CnbGxQeUqnTB1ZwCCNo1BnbKmsG3YCQPGfYFpk0ejS5M6
cLTqjy2HjiA7SzwuvBejT52OGLBoPzKzIxEek4oDyWnwntcKVSq5ot+CQCQcECFRtTLKlHfHrIAD
CN81Fm5m7bA0IRspCREI8Q9GVOop5IXOhXu9WqjXcQZCDiQhKCIOwXvWYWQr+eZYxia9OgwAA5/X
GgBWZjBpPA6bdm3GFz1ro+R7RmizyAeBKyegWTVxxO44Gp5HjyHVcxLqmFjDueNMBKbEYU6z2mgx
YDsO3UjHttHNUPYzZ/RZHYZYnyXoZOuGKT4PA6AzViQmYfukDnBxHYQ9mVnwGtsKlsYmqGRsCQsr
e5haO6Fqiz4YN34xtoVlIiVyEdwr1sKQTWHw3zYGDU3LorxxT6wR69k1vQtc602E//EsbB5QC8bl
TeDUcQ5C0hMxt7ncph3IOZ+INb2q4W2jNvgiMAlJW8eiXoOx8I05AN85HVH580/wcTkr2LSbgJWL
J6B93Vqwkb+xoPX1IcMlA8CpE6Zt9YHv2hGoXsYIDu7DMH9zEs7euYjwxX1Q36ob1qbkIXZNLzia
WsKxxVLEnkrBknbWKFPOGvWHrkV0cggmiMdItxneiIheiz5VjVC2QhtM94xB4JZRaGzmjoVROTia
vBodq9rCpGZ/bE9Kx8YR7mg3IxCn4jehS10TfFSqPCpbyB8faGwr0UvCADDweX0B4AiLSo5oPn4X
ko8cQuTeVZi3YBHWh+bien4ARjV3hY3NCOwSR9qLOteBjakZnOp3x5KgDKzuXRdth21BcPxm9Kti
jEoVTdF8zHb4+GzAgLqNMcnr0QBIxLZJndCwy1LE5O7DyKo1YCuPuO0cYWVdDTW6iB1xSCwS93gh
LDUdUR7z0c6sPkbviELw7ilobW+Myqa9sDohUQRAV9TvOBdh2Z6YWFdsn5EZHOo2w7S96VjTpy7a
DNkijrh2YHB1I5Qv64ahK4MRGjgH7arVR7cpa+DhuwcbVy3F8M4NUc28Aj75zAimNo6w45Oy/tja
wMiiDcZvC0eU9ww0r2wME2sLlP20BWYExMJ7+QA0sO6ONckJ2DSqBZwtHVF74AYkZW3HILsaIlKN
4NysNxZ5JmBBu9oiAHwQHr0avZyNUbZsS0zZGwV/JQDaYVFMPLZMbI8a5qawsnfFRI/D2De9BVxa
DcWSHXvhsWcL5k0aAfd6dvwRAL1SDAADn9cWALbWKG/fDXP3RiMzLQzb12/Fjp07sWXDPsTnZ2O7
OIKpV2UwdmVnw3dqM1QqK4622y9AeE4EptSrjVZDRDjkBWF6UyO8/UktDN4Qjhjf+Whj4oapvk8G
QAe4Nh4F75yD2Na/MUwqVEL5cpVQxqENhmyOxiHfUTAuYoTm03YjLHApOpg1wvg9sQjaNhKuRqVR
zuiRVwAaTEVwfirWdKuGip9Xgn2bCfBMisBUl4IACDu4GyPqmKJc+aYYsSZErG8ButqLnX2JEvi0
WgfMCjyLXM+JcO/WG6NHD0TzWiJIbPiyrP44wryyM5qP2ojIvDgRra4wKVkaH3/cDDP3H0CgeHw2
tu4mAiAJ28a1RlVLe9RsvwqJp+Ixp6kFPv3MFHX7LYR/rB9GODmj83RvRMVsRi/7D/GWWVcsCc9E
/KYRaGjmjkXR2YjdOBDVTcqjfPXh8MxOx8Y+DWBb8TN8+KkR6o3ehbiUDOwdWxumIjS0t5foz2MA
GPi8rgCwMjVF1f7LEH4gHmv61cFnJSugfEUjlCltjc6rU5ATOA8d3EZiS9ZhHIz2w67dvvCPTkXE
5p6oWa4WWg/cjAOX8xDtsQ2bvRKRlOSHFUNdYPqJOxZGpiN8y3A0tuyGDYcOwWuGfA9ADXSZ4IuD
OVHw9PbC9nVL0b+NK9pP2obU7BR4bNqLsKwjSAlahS4Wlui6JAgpeXmIXT0CTWoPxeqDmfCd2wN1
rRuj74oopCX7wMPTG97hcfBd1ktsUx20H70XiXm+GFvXBGXLNcfYLbFIDJ2Pdo1aY/iCrfDcsRl7
4uPgOW0Qmk70wtljgRjfzJXvAdApWxtrWFdvgm5LvRAWEY2w7duxZUcUUhJ9MGdwEzhY9MeO3EPw
mNwONaysYF2lK8ZvT0BG0j7s8ghAQGQEdonHbvVyFnDqPBPb47JxKHwrNmwKRtql84jfPBKNzdpg
QUQ6MjMi4bVrN/aEZeGAzzi0rloLtXrMxrZtO7DLxwv++70xp1VtmFszAOjVYQAY+LyuALC2skHt
lr0wZPAQtKgrjpYKj4Jtbe3g3KIvxg7qiYau47AtMwF7Vi7FymUrsXj2FHR2MUclI7GzHbYB+w9H
YMMXs7Fq7XrMGNYVrlVMYGxRH+0GjET/rs1Q3aYBOo0YjV6t66OKtfzDPk3Rd8ZirBDLL184C30a
O8CxRkv0n7kKa5bOxYxpY9GrqzjKtzOBk1s3jJy1AetnD0Ozei3hPngkerdtCCcbK5g6txPnLcfq
tWuwaOYotKwifwugGuo1643Bo/qiaVVbmJnXQdOuQzC4b1vUcG2DgVOWYP3adVixdDw61KkFe9fu
GDWiD5rU4CsAuuXgDDtLS5S3cUW74XOwdt1arFyzBrOHtEetKuIxYt0U3UeNRo+WLnCys4eltT1s
anfDxIXi8bhuNeZOHIjGtpawEN8TJlVc0aLfNKxcuwFrpk3D+Mlj0a1TE1Q164Kl0bHw2b0BqxYs
wbIlC9C/qSMs7J1Ro/MELFuxFmvWLsXUEZ1Ry9QONlrbSfSSMAAMfF7bjwDEk6ONlTWMld/HL/hd
+Yfn2VhaoKKRJeycx2BvdgJW9qgF0/IVUb6SuXjStIeZcV10GLUdESnbMMCxHD4rZ4xK8veobavC
wbHgd/1NzMWTqb2DWLbw9/flk7GdeCKtbIqKFU1QsbJclzxKsxWnmaBCZTPlbwGYmMs/zlJV2Taj
ysYob2QFK/EE/NjfAbCxEeeZooJYTyUjC5jbFvz1QPm72sbGVrC0e/i72pYwNrWFjY09TI0Llq8o
b4P8k8LWYv3KNnPnr2/isWArHrMmZoX3v3jMmIjHmPKYkY9l8biykm8CLfgdffm4qCyWUR5b8rEk
f2YvHrv2dg6wMC1ch7G5+D40h6mZJczMemFV/AHsmd4eVSqWQ+kKpjCxLHhM2Yj4kNdXoaIpKsvr
5HtN6BVjABj4vL43Af4W+df4HOFYbTy8j6dh4yA3ceQtjl6Uv+QnnjSN6qHTmD2Iy/bEqLoP/2gQ
0d+MCFoLs95YdzADPvN7wdVWBqXGckSvCQPAwOfNCABxJGRXRflDQG26d0PzejXEEdDD/6GPjINq
qFnfHR26toOLk0NhGBD93cjvBRc069wdbdzkjxEcxfeN1nJErwcDwMDnTQmAAuJoX/kTpo+/TF7w
p4BtYGoq/5Su82PnEf2tODgofwrYzKrwx1NayxC9JgwAA583KwCIiMhQMAAMfBgARET0IhgABj4M
ACIiehEMAAMfBgAREb0IBoCBz6sOABtbR1hY2sLSSv5vTYkMia3y2JW/oaL12JbkeQWPbz7GyXDI
x6x8btZ6TD8PBoCBz6sMAPnk6Fy1Juo3cEPdeg2JDI6reOw6OVXXjAB5mjxPLqN1WaI3lXzMVqte
+zfj9o9gABj4vMoAMDWzQodO3RCXkILUtEM4nHucyGAcFI/ZiKgENG/RBuYWNk89vuVp8jy5jFxW
ax1Eb5q0jBwkHkhHn36DYWJq+dTj+nkwAAx8XnUAtHHvhPMXruCbb75BTk4OkcF48OAB8o6eQOMm
LZ8ZAPI8uYxcVmsdRG+au3fv4tbte+jRqz8D4O8+ryMA7t77Grt37YK4OiKDERkZifMXr/5uAMhl
5LJa6yB60yxYsAA//vRPdO/ZjwHwd5/XEQB37n6FvXv2aD4Yid5U0dHROHfhyu8GgFxGLqu1DqI3
zeLFi/Hgx38wADivLwD27d1b+AD8GGbVG8KlWkUU+6gy6nXshpbO5VDsiQfp095HaZOaaODmhArv
aZ3/Yt4ra4UmTZrAqux7mufT39eLBUAxVLJ3Qf26pihRrAyqt+0G97om+Ljo0+t/3Lv4pJwT6jer
CeMPtc5/MR9bNkbfkSMwbNgIDO/bFtWNP9Fcjv4+lixZwgDgFMzrDwAbDNmagLBt3WD5uQO6z5iP
0S3N8ckTD9IiRd5C8U+d0KSDG2xLys8/hWu/3YhNX422nz657IsqiZoDVuLEtZNYOaAmSmkuQ39X
LxYARug8LxTRgSPg/Jkp2k6cj8ldnVH6qQAoiveK2aJhh2aoUqao+Lw47JutRvSRXehd6cllX8Q7
+NSxFxZ6RiAuYBe2bxffO1nBWDO4DcpoLk9/FwwAjjqvPwAs0Xd1CHzWd4f9W08/OB9V0mQSgvP9
0L+i/Lw46vTciOCYeWj0/tPLvpDyTTBx0SYEHwjC5kUT0bSCfCLWWI7+ll4sACrBfZoXAjxGoc7v
PE7f/mgQPPIjMN5efl4U1o0WITBlLTqUenrZ5/VRGTeM3ROHwMVNUbHwtGK2DqjtVI0B8DfHAOCo
81cFgPfaTrB463PU6twLbWtXQPEi78Ox01jMW74Ki+fMRv8mzTBuUzgOXzyKuI2T0KtuDVTttAx7
wjZifMc+mL9+Heb0bwyTTwof2G8Zo0n/qVi6eiWWLZyFTg5v4613K6Hl0PHoUasUihR9F5/X64ox
Peri08JvhIotxmH9hpno0rIzZm1cj/EtKhVuoxHqd+8GN9fWGDppJpYumYX+9Uor5334aU207tcd
TV074otVq7F4fE/UMSpYX2mbphg6bxVWr16HKd2rofJHhdtGBunPBcAQOL3zMaq07oEObhb4WJxn
0WIwZi5dhWWLFmBQk6YYtsQH6RdPIGnnTAxtWhOW9Wdhd/wuTGrXDXPWrcWC4e6wL/1we8qiTpdx
WCwe38uXLkSf2iXwdpGSqN9vPPo3FI9bEdPvOXXAmL6u4vH9ERx6rUJ4zHq0VV49e1IF1GrbEV3E
98bMmcPQolJxFHnHFl0mzMXyVeL7b8YYNDGRy72Nz4wbo+uA1rD/WH5eAua126NrlxooK67DvlkH
NGveFr0GjhXbtRTj2ljjAyXqS6F2r0lYuGINls6dig5V3i68XnoTMAA46vx1AdAOxkXsMCUiDZ7T
6qCiQ2fs8tmLufPnYOr48ejq2hDDlgch61wOQpcNQ4fqTnBoswoHrh5G8MqZmLTAA3Fpcdg40hkl
xRNhrSH7EBG3DesWz8aMDYlIDJ6Gzo726DTWE2E+Y1CzQgtMDvbD+vbVxfJyO8qj5YQ12LGsG0q9
Uwrdlu3AmgktUE45rxEWJh7H8ZxQbJw5A3O3J+Nw/EI0qfgRSptPRsy9S0jZswIz5qyFV0wawpe3
QIWK4nbN2QafvasxfeY8jGjniArFfv2mI8Pz5wKgP2yKVMbgfSkIWdUaRtZNsWb3PixbOh/Tp0xB
D9f66DtzD1LOH0X0unHoXd8ZJrVnI+ryEUSsn4/J87djf3IyPGe6iiP2YnDssgFBCR7YsXw2Zq6K
RUL4EvSvZYXmfbYiKmIGXMqL7xcff2zvXks8vsvDZdwmhGwfgEpim4pWdEbXKWuxfcsSDG9lj1Li
+260dzZO5Idj7bzeaFSmBjrODEJc5FLMnzsHi/akIG5vb9QsWRzWbisRc2wv+laWt60i2k4Ty0VP
RDURJD3WJePk5TTsmz8V01dGITttN4a4lsMnToPgF7QXM2bNwfQJI9DSlgHwJmEAcNT56wKgPUyK
WIsnokhsHlMdFRpOQUJqDOa3L6s+UD+uPAp703aiezn5eTHU6LIZB0/7YnTVEsr5tad4ImjTcDgb
18Ds2DTsGeKId+Vl37LA1KBD2NqrIt59uyKaietL2hmITdOcCnf+QsWGGLd8C2a7f6Z8XqrNTHhv
X4BWFh+Kz2tjZmgq4nf1gZlc9n07zAxJxco25VHJcjQCTyViTTdj5XLl2kyHl896tK7rhOE70nFo
ex/1JVcybH8uAAbAVuwwe28Kw755bqhQYxACkpKxebC1uv6ixXpjS5o3hlvLz4vCwnUR4s+FYbZb
watNNgPXInDvLNQ3tsJI3xQEzm5c+OpVeQzdlwHPsU74pMinqLXAE9E7IuC52KXw5f0KcBm/CaG7
hsFCXk9pCzTqPh9BWadwYHdvWBYxwoDtSYha7y6O5MXyn/eD97FELHQtrlxvkUoiVqIOYGbtkrB0
nQu/5I3opvwYrjyaj92DQL8RqFKkDDotjUJG4lw0Vl6FK4V+O5Kxd1xtmHeYj/T0UExqUvB9Sm8W
BgBHnb88AHyisHV8LZQrboRarbpi+ro92Ll5FfrVKI5K9uPgmeGBQVbyciVRp+d6+IbOQP3Cn61W
7b8dXlvHoE5tccQe54dFje3xYeGDvNXCFOwYYYS33ymCEoMj8O3dPMx3KTivSJEPYdJ4BiIvXkJe
rDc8PT3FkXwubt9OwfwW5ninSDV8ER6JFb0sUFwuX9QEI/akY13vSjC1H4VdKTvUN2pVrDsKmwPE
Ntb4AOWcWqH/Fwux2SMIa4bXgRF/BGDQXk4AhMNjUUsYf1gWVZp0woSVW7Fzx1aMafwpSlfoi+3p
gZhQ4y1xuQ9g03ghfOKXo03hj7Ws3Bdhz975aF67KiYE+2NDj7pqwLpOi8buqTVRRr7K1G4Prn95
CVvbFpwn3zBbvecGRCYsRtMPHp5WEs2ne8FvVy8RACYYtDMM26fWRwV5nsNY+B3aieEVPleWLfrR
5xiwMQkLmn8Kqwbz4Z+yHl3Ky3WUQdORO+GvBEBZdFsdjF0LWsBYWX8xtF+eDM/Z9WBUzgz12vTE
zI0e2LV+KXpX53tr3iQMAI46f0UA9FuzHz7rOigBMMY3Gtsn1kX5hw9QowaY5pWB4PHiSMJpErwy
96Cf8vPIj1Cj605kHPfCEAf5uak4iglDwIL2qPCxIyaHZiNwjgs+l+so0xrrE0MwzbkcPiruglEe
ntgycg22bO4Be3n+R7bouMAfqUGL0bN9Z3Tt2hWdO/TEwoBk+M1vA7P3bDExKBsJG9rhM/nubdOB
YjsCMcbsc5Q3G4fg/CSscP9Y2abaY7cjKmguGqk7+5KoOy0UB31no7XNO4WnkSF60QBoN90bgZ4D
lQDos1kcmS9xV47ElfNLOWLYzizEzGsKc7PB2J7hj7FV5HnvwKL+CiSdCsM0F/mSeVm4L/FD6Ob+
MP/YBAN3pSFyYweYy5+xF2+AhdFhWNLUEiWKOGGA+N7aMHwDdu8ZhOrK9byNjyzdsTw1C8HTmhf+
WKsc2s8PRPDevrCSAbArEntmN0Zled5H3bAtKwube5RRtvH9GkPhkbAHvT57D5VrTYZXog+GWorl
3rVDr22pOOw1BHZFSqPj8kRkhk9GDRks7zfFqgMxWN3OTnm/g1xPUes2WOB/CEETrFG08DT66zEA
OOq8/gCwwoD1EQjY2BGmRWwwLiAeOybURLnavbDWIwxx0SEIT9qn7Gw/KV8TCw9cw7n4HZju3ggO
bZYj7mouor18EH/gBA7un4eeVT4WTy4foLzrNOyJj8XBlHhEJSdjx9g6MC9eBSPXJyB0ZRuU+6wa
JgUdgN+YhrCybokV+w9gTadff9wgle24Gkn7l6GlRTOM9IhEXHIswoPDEJ2ah8D51VBavinKZCS8
T2cj0i8AMfHZSI73wqwW5fDBR87oOGcfUmIiEZUdhe0j2sGyhDyy+3X9ZFheLAAqo/1Mf+z3HSx2
kpXQb3sMfBY1RyWntpi7PQSJkcGITAvAF9WM8XFxc0wOO4MzKb5Y3rspzOrMRviVPET7+IrH91Ec
jFqPEa6l8FaRd1HaeTjWh8ciIzUeMSlp8JrVArYfmqHn/EjE7uwN01KWGLAvAVELuovvK7Ed73yA
Ci69Md0jHnnx0YiMzURW1A6MdS+HD4vYYaxXHDxFhBgrv55YChadViEyIxoJibGISgjHyp6Wyq/m
vvt5dXTfnILzh+MQs09sf24O9u8bCsciZdBxkT/ij6QgwjcQcamnELelA5xKvo+iLmOwxz8CsTEh
CIvZiRFmpdSvKf31GAAcdV5/AHyAz40sYW5cCu+Lj8uaW8GkbDHxRGOC6nUboIlbQ9StZlpwFPHW
WyhjWRsNXGvDvmJpfPBxeZg5OsDRqS7cmjRGNfPP8IH6+9XFUMm2Jhq6NUYjV2dUlD8meKsEzJyr
waq0OBIv+hZKGTvAyaqMeOItBTMrG5Qr8fhLk0VLlIONlRk+Le6GacHh2DqrO1q7NBDrqwVT5WXZ
t1HWehw8DvljepvaaOzmhjqOpiglj8reK4XKDnXRVJzWqKEzTD75gEc9Bu7FAuA9lCpvDguz0mJH
+x4+N7GCWcUSeLdkRTjWqi8e343hUttS/U2UT02rw8W1HqqalsX7xcvC1NEe9o51xHrdUNOmAj5S
f1X2fZSxqIb64vKNG9aAifLY/QCVHavBrnwx8fguguIV7VDNwQgfFa5bKmbkhEaNGwmNUc+hMkq8
I08vhnLie9Oswsfie7Bw2aKlYFnNBY3E+l1r2eJz9XrfxgflbeHSUHxf1aqBao7WqGxaGsWKWKDv
mgB47ZyILnVc0biRK2zLFL7iVdoKdVwbws2tAWo7Pb499NdjAHDUef0BYAhcMTcqAZuH2D7xFwrf
RXnbyfDL9sRg00dPJz16sQD4u7DF4M0R8Fslf5tH63x6UzEAOOowALTUw7SAUKwZXAWfPXb6uyhr
NQa7k3dioPLGRNIzBsBvsUKfVX7Ys6wDrN7WOp/eVAwAjjoMAC3v4aNPP8Unxd7FW4+dXhRvvVMc
JT8viWLKS6mkZwyA3/IOin1SCiU//gDvaJ5PbyoGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBRhwFApI0BQHrEAOCowwAg0sYAID1iAHDUYQAQaWMAkB4xADjqMACI
tDEASI8YABx1GABE2hgApEcMAI46DAAibQwA0iMGAEcdBgCRNgYA6REDgKMOA4BIGwOA9IgBwFGH
AUCkjQFAesQA4KjDACDSxgAgPWIAcNRhABBpYwCQHjEAOOowAIi0MQBIjxgAHHUYAETaGACkRwwA
jjoMACJtDADSIwYARx0GAJE2BgDpEQOAow4DgEgbA4D0iAHAUYcBQKSNAUB6xADgqMMAINLGACA9
YgBw1GEAEGljAJAeMQA46jAAiLQxAEiPGAAcdRgARNoYAKRHDACOOgwAIm0MANIjBgBHHQYAkTYG
AOkRA4CjDgOASBsDgPSIAcBR53UEwN17X2P7tm2aD0aiN1VoaCjOX7z6uwEgl5HLaq2D6E0ze/Zs
/PTz/zEAOK8nAK7fuIPsQ4cwYEB/IoNx5sxpnDx9/ncDQC4jl9VaB9GbJjY2Ft989wO6MQA4rzIA
5IOrY+fuOJ5/Bt//8BP+37//R2Qwvvv+RxzKOYrmLdrCzNz6qce3PE2eJ5eRy2qtg+hN8+DHn3H2
/GX0GzAUxiYWTz2unwcDwMDnVQaApZUdGrk1x5RpszBm7GSMGUdkSKZg8pQZcHFtBCtr+6ce3/I0
eZ5cRi6rvQ6iN4x4Lp46bTZatnKHhaXtU4/r58EAMPB5lQFg7+AMaxsHpTKJDJWNraPyWNZ6fMvz
tC5D9GYzVwJW63H9PBgABj6vMgCIiEi/GAAGPgwAIiJ6EQwAAx8GABERvQgGgIEPA4CIiF4EA8DA
hwFAREQvggFg4MMAICKiF8EAMPBhABAR0YtgABj4MACIiOhFMAAMfBgARET0IhgABj4MgFfJEVZW
9rC2raJx3ktg5wArSztY21WBrfjYUvlYYzkthctbvYxte5nrIiKDwQAw8GEAvCpyp1wDtVwboGa1
6rAXO2nt5TQ4VIG1tS0srBxgY/+MP9UpdvT2jnVQt0FD1HCqCkfneqjXoAGqV3GCrdbyYp1WVmKd
1g4F5zu5oGGzlqhfqwYc5LY+ufwfJW+XkysaKeuq/ux1ieu3sbGDhaW9uE0a5/8Btrb2sLB4jsgh
oleKAWDgwwB4RezsYG7WA8uifLBkcEfUMLGBtdZyTxE7SttqqOHSBA0buMLZ3lFjhyoCwcoJ1V2n
wiMrDHNa14dbh8UIyPTDJDdxNG7zZGzIddZA7QbN0MClDhxtbGHVYDQ2hQRixcAWqGZr+4I7VbGz
txWR0mgstuwPwLL+TVHV1g42T61LXn9VVK3dGA0bN0Q1B63b9NtsbZ3hVL0BGjZpjJpV/kSwENFL
wwAw8GEAvCJKAPTCqvgArBjaWQSAJUzNrGFuYQ0TU/k/47CEmZWjODIuOLI1U06zgIm5GcqWboRh
q4MR7PkFWlpUhJHY2dtY28D04f/Iw9wWlpZOqFF/OnzzojG/bX006bQM+3ODMa2JIyys7MV1Fyxr
ZGotgsAKlcq2xDSvaPiuHgIX08owsXGElaVYT2Es2IoIMDW1LFi/qRUsbOT/7KbglQhzsd1m5lYw
NjaHsZmIB1tx3mO399d12drJ6y64nb+uywZG5eug84TdCI1Zg252FVHJogocxOUsLeR65bbK5eTX
wwEWT32d7GBqVBVNuq1CSPo+DK1ujMpyOyxsxHkOytfw120hoteFAWDgwwB4RZQA6IkVsX5YprwC
UBON2neAW8vOGDBwGAb37YWWLtVgae0AB+f6aNVzKIYPH4U+nTujhVt/LA/NQFqSJxb2a4M61Z1R
za0Leg8ajWFDh6B3m4YiCKrA2WUqvHMiMa+NCICOSxGcHYhJDW1gW70h3HuPwrDhIzCkZzvUc64B
5/rjsOPgYSTv34QvejRH9ar10aBNOzRxqQl7cdRuWcUNHfsOxdDhIzGgZxc0cBbBYlkNNV2ao2n7
jmjbrjdGiPX1btccNZ0dYKke5YuAsHOBm3t7uNWtCacq9dG0Ywc0adkVgwcPx6BeXdCohgiYqj0w
a3c8MnLCsGZoR7i5VEdl8+piG3ph0AhxuwZ3Q6Pq1WFrVRdu7dujsfw6DRiKwf16oUXdarCp0g5j
lgcj/UQSto7piubNmsGluTtaN3aBvQgHviJA9PoxAAx8GACviBoAvlgysD2qmw7EttxcxEWGIzrm
ANKPn0Ta1kFwtqyJlgOWIDw9HVHxB+C/di0WzhSfn72Ci+dP4LDvUvRoWh0NBy3Cdv8YhO1PwbGk
rejZrB6ca0+C1xMBMMHVAk5uXTF7RxSCgxKQezAMqyaMQu9xW3Hw2nWcP5mL9F3T0LL+KKxLTcGu
iW1R3cYFHb7wR/rhBCQmZyAlNRM+81rByaguuozbg4SLuYjy9kN09hmczQnCwt4NYW5ip+x0lR8B
2A3F9kOp2DaqDerXHgevU8cQExyM6MQMZOfnYP+8/mjRei6C88/j4uVzOBa6AWM6uMG25SSs9w0X
X5NgBB2MxMahnVHPZiA2Zx9GXFQ4YqKTkJZ/AikbR6FFo0nYk5mP89cv4kTYJkycMQ+L9x9Ayvrh
qFLZ+g/+eIWIXiYGgIEPA+AVeSoABmBH9lFk7RghjnKroNaInTiU7YHBDdqg/8oYHA+eh/p2FfBx
mfL47HM3DF8TjGCvL9DKsjKMza1RyaExOvQZjvETtiL6ZBa2DW0F17oT4JH9eABMbWyNChbOqNGi
J4YNm49tUZlICpyJFhVdMW5fNHzXDIGraUVUthA72tQkbBnjjvoNv0BIfgbW93YW39DWqNd/FaLS
wjHFtSbajvbCsfOxWNqtKt6x7Iql0SmIWTsWbqYWsLB7GACDsSUtCZuHt4ZL7fEIyD+C+GXdUMGs
FlrN9kdO2mZ0rVgd7cfvQmjsGvSwK4NSldphtk8qDh30xMJRAzFoTQxyAxehe7NRWH8wF9m7R8PR
2hHVhmxH1hEfjHCoicZdVyI4fR+GVa2Az5zdMWLeMiwe2RGOZnYv/MZCInpxDAADHwbAK/JEANQw
G4AtGfFYPbAR7MXRc+0mc+B/OAxftK4H164zsMPPB3s2r8D4QZ1Qy6IBhq8LRajvXHRwMEFlm4Zw
n78D4aHRiAkIRfLRNKzv1wIuTwbAIX9MqF8FTp0nYnVQPFJ8AxGbk43I7V+gpakbJnvHIWDDKDSx
NYWJ1UBsOpiIzWPbo1GPJeLofg9GVq0NSyNjVGnUEXM9krG0c210GL9H7LQ3oK9zJZQt0xxjt4Qj
xOMLtHM0h5nNrwGwOTURm0QA1K87DnsPRWFBh2owr1z4c/ssL4yoVhudp+xDRPxG9HeqiM+d+2Jp
cAqOZiUi2MMfgYEB8F42Go3rjcaG5FisHewGRxNb1Gw0Ez6HQzGjST206LMWoZneGOsq3wNhjcrl
K6GMkQ1sHZ/xmxJE9EoxAAx8GACviGYAJGLDsKZwMHNAnRbzEXg4AnNbV4FxmVIoXt4e7RfFIicl
CLPaNhdHxOEI9ZwCt4qfoKTbHMSIneDCttXwSckWWBYThw2DW8O13hMBkOmF4a3aYdTOaBzcNRgV
ipig3XwvhHjOQWvT5pjunwC/Vf1Qs1I5VLIYoOy0N49phwYt5iHqZCIWtrJDmc8qo2rnqfCKD8X4
WrXRccIehCdsxsAaxihbviUmbI9AyN7pcHd4dgDsy47B0q61YGFcHc16yZ22B4Y510W36d6IjF2B
TuYlUcKoK5aGH0TCjjGo+WkJvF2sJIp/WhnmNkOxQ3ydNo1ojipm9qjVVIbSfkxv7IJW/TYhInM3
BjmUxWe2DdFxwHAM6iS+npaFv9pIRK8VA8DAhwHwiogAMDPtgw3p8k1vnVDTdAj25h/CztHN4WDq
gLqtliH6dBzmdKiPRv1nY9PaNVjv5QN/7y0YUbMmOszxRFJeLiKXDIFbxzFYFxyHmGBvbNzkh7Rz
R7BjcCvUd5mKoNPiSL1dAzTrsgaxJ8VOu1lDdJ/jgfSMGGxasQ2hOceR7L0A7mJn2m9jNFIzU+A/
rz/q1xqFrdmZ2DepHWrZtcHorYlIi9uOTVt3Y9/+KPgs7Ylqn9dDjxn+OJC1G8NqGqF0udaY5nkA
cQFz0MHBDKZqAAzHniOHsHtMWzSsNxmBp1OxtkdtWBhVR4t+W5FwIgTjqtui2fA1iMo/haT1E9Gl
URPUH7AZCYfTEB20HavWbcbGmYPQUATEzrxM7B7bElVM7VG7+SJEnE3EvGZVUb/TdATkX8DBjVPQ
fdRMrIrJQNaWkXCqxPcAEP0VGAAGPgyAV8UR1tZN0H3scHRt1gBO1s3Rd/JE9G5RF/bWVVC1TlcM
mzICbRq4wm3AHGzZsh1bt63EpAHt4FzBGM5NumH0gp3YuWwi3OvVgUvX8Viwfjs2L52GcVMmoWuj
eqherR0GTR2LTvVqoVb9Hhg+dQRaO9nBqV5HjFqyFdvWLMLcOVPQv3sXuNoao1qrgZi8dCe2zx+O
JnXbotvY8ejXxhUO1tawrNkdU5dtxJbtW7Bizmi0FEf4xhY10NB9CEaN64+mTtYwNXNBm/5jMHxg
R7jY28JK/iaA/CuE9i3RZ+JE9GnhKrbJHQOnjkPXhtVgbVkVtRv3wYjJw9HK2QIO9Vpi4Mxt2Llq
Fvq3rYXSJvXQfuhsrN26DZs2b8WmWUPQsI47eowbjz4t64ntcoRz7S4YOm0sOtSxg32N+ug+aSO2
rpqHof17wn3AKIzs1oKvABD9RRgABj4MgFfH3sEBZsaWMJN/fc/BHqZG5jBVf/ffBsZGlsrvvlub
m6NCRWNUqGAKIzNb2DhWha2VOL+yEcpXtoSl/J19cwtUkstUNoeRWI+Z2Dna2tnBxMgC5jbyr+wV
rk/slOXfDDAW35gVKpmJ+88cJua24gi5KmwsrVC5klinkTWsbO3EtlnA1FJsj9hWWxtrcZ6J2A4T
VJTrsXVW/g6AlbiMsbEIBDtnODg4wkL+fQFTuT5xvnpbxW0zLrhtNoXbZCb/voC4nTYiLuR2WdqJ
22QjzlNukzjfSv4dAPH1MTEruO3ieiuI67F+uF3q18m24DaK7bGzFcsbGYvLi+sytxHbYgljc3ux
HN8DQPRXYAAY+DAAiF6c/O0DM/sqpBOmgpXw+B+6omdhABj4MACIXoyl2FG42lfDHDsXzLKrh1n2
4l8yXOJ+XCB0sasJc3Hfat3n9DgGgIEPA+Dls1X+73ykF1r3sSSPGFvYV0e4nRvChCiHpmTAwu2b
IFbcj+Ps6sKYAfCHMAAMfBgAL5fcYVjbOMDK2p50wNq24D0SWuRRYjMRAGFi5zHHpCqsi5UkA9at
jBliHZphpH0dmDAA/hAGgIEPA+DlsbC0Q9u27TB+/HiMGjWaDN3o0RgzZizq1K2vRN2T9/fDAIhy
bIZxlewhvp3IgNX5uAwSHZszAJ4DA8DAhwHw8phb2MLdvT0yMzPx7bff4sGDB/jpp5/oL/D9998p
98Gf8Z2wb99e1KpVV3k14Kn7uzAAIkUATKzsoLlTIcPRoGQ5JDAAngsDwMCHAfDyyABo1aoNjh8/
Djn//e9/8csvv9Bf4GWNl5cXatSozQD4G2AAPD8GgIEPA+DleRgAR44cUXYeQ4YMQdmyZekvkJOT
o9wHf3Y8PDwYAH8TDIDnxwAw8GEAvDxPBkCHDh00n2jo1UtLS1Pugz87DIC/DwbA82MAGPgwAF6e
JwOga9eumk809OplZGQo98GfnVcVAMU+N4Jx6Y80z/tN75ZCJfnXGT8vhne0zn9BH3xaCcZlSmie
91yKFsfnFcvj0+Lv4t0S5WBubYoyxYpqL/uHFMXbH5UX6zFD2eJvaZz/8jAAnh8DwMCHAfDyMADe
HG90ALxfFqN3pyPHZxpMPn7OnWOZZpi+cw/md7FBSa3zX8Q7n2DgpgPIC5kPu9LvoKjWMn9Q0Xfc
sTIxDHPbGKF8raHY6LUafWzf1Vz22T5COVNTVCj1Pt4u8hZK1BiGTd5rMcDxfY1lXx4GwPNjABj4
MABeHgbAm+NNDoDidb9AWNReeCTEYm6jT//UDvdleLfaBATs3w3vlEQsalER7xXVXu6PKPpOO6xJ
jcHSDhXwgcb5f4wL5kRHY0X3yi/1VY7fwwB4fgwAAx8GwMvDAHhzPCsA/ve//+Hf//534WePj9Z5
Lz8APkSj2X7w+KI1WkzZC/8FLVDyrYLz3n6/NOwbtUHHjp3RqkEVVHhf7Jw/tUSdlh3EaZ3gVq0C
Srz1ISraOcG6UomCnePb5VC1cRu4t26F+naWsKlpi3Lvv43ipYxhWaMqHJxc0KFjezSvaY3Pij26
HQ+9i9pTveA1yx3NJ+6A/9IO4vLy9Lfw4cdGsHZ2hIWpE1p06ojWLg4oV1ye9yHKi8e6haUNnKq7
om2ndmhoV1ocrYvz3nbHquQILGortvW9crCu7oDKD1/leOszOLq1K7x9TqjwYRG8X8YK9Vp2RscO
7mhd2xzF3i4N05rj4H0kF6FrhqNLLQsUL1YBllUdYPSJvG4RGSWt0bBNe3G7OqJpLUt8+rY8vRjK
m9nAvEpV1K3XBB3bt4GrbVm8+07BZf4IBsDzYwAY+DAAXh4GwJvjWQFw7949BAQE4McfxQP8kZE7
/4SEBGRnZxeeUjAvPQCK18fCIE+Mrl0JZRwHYk/wMjT5WJz+TnHYtJyKwKR4+AVHY9+yoahrXAEt
x2zE/oRYBIdGYcOYuqj8njOmRSRj17jq+LzIZ7DtvwOJWWHY7++LIN8opOb7YEDF4rBuuAiR144g
ZPtWhMXn4njefsx3N376qPz9mpjp54XJTczwqXkPbN+/Gm3KyR32OzCuPgthF/MQsn4DPCJTkZ0R
h40jrFGiSEV0XbQfSdnx8N+8GX7xJ3E8bgU6VCmB94q0wIoD4ZjXohIqVBgMj2MRmFztbbz7QQW4
9V+OoNQEhEfEYt/S4aj3eRF8UqUtpq3zw9494TicuAt9Rcx0mbwTmTeu4WR6ODyntkclk+HYnReB
6bXexwfFndBpSQiyMoMRGp6OpLhALOphKrapMrrMD0bSiYMI2rED4elncSZxCdzNPsJbT97mZ2AA
PD8GgIEPA+DlYQC8OZ4VALdu3cKCBQuwZcsWNQLkzj8uLg6TJ09+6rcHXnYAFGswCz5bhsBS+bwc
+m0OxFr3sijygREazwnDMZ8xMFOOwIXSrbDAOx7h85riQ3Ud9TErNFrsiJ1R9rNO2J4Sj7ktPlDO
cxoRiOwcT/SrWAzmDZYh82IM5rmVEudZou/uGCSs7Qtb5Wj5V+/VmgKPbaNRVTmy/xhd1gViU09L
8fE7qFBlJhJuZGH3MGfx+bti/ZsRETgfDT/8BM2mh+Pkub0YYCPfyGiB0T7J8JogAuWDxlicUBAA
5cv3w45MX4xwKAHjhlMRlhGKCdWe/Dn+RzCu2RJ9es3AnrRs+M2sK8LGEVNCI7GsW0VlmXc/64+d
mQEYXfVzmDdahrg8HwysLC/7IaqO2Ibo/QvRSGxT0+kROJO9Bi0qivM+ccem9ARs7ez0h98rwQB4
fgwAAx8GwMvDAHhz/NZ7AO7fv49FixZh27Zt+Prrr5GYmKjs/LX+dsDLDYAyaLc6EUdT9mHetPEY
P/EL7Ek5gZP+I1Fe7MzK1RmIxZvXY/3KORjasS5MS5VDze4zsWn3OiyZMxm9GlXGx0WrYkpQFDaM
qIryNYfA02c66n3yobL+EqUHYnvGbvSrXAK2TRfBN2El3D+T11seLSfuQ4DPaNT98NHt+QxNF0Yi
L80XS2eOw4QJk7El/gTOR01CpSLFULnaNHglb0Sn0gXLV2owDpu8NqJzhZJoPVccta/sCKvCdbnN
iILH/Caw/rQRFsX9GgDb07wxpHplOI/aitj9k+CsXrdQtDRsu0/DZp9ghOzZitCsdOwYVVd8LWpi
ZmQM1vSzQnGx3Puf98eOdD+MqlMJ9oPWICrsC9QtXMenNXtg6bat6FqpJFrO8oPXhh6wU97DUAMT
/aOwbWJtsb5HrvM3MACeHwPAwIcB8PIwAN4cv/cmwC+//BIrV67ExIkTMXPmzGf+4aCXGgAV+sIj
JQEhu7dgzeo1WLNmDTZu9Ud8egCGG/26XJXRfkhP8sf0xoW/9vaWMbptyMORgDGoV7q6ONqOwIbh
zihXsSf2JQZiVM2Cy5l13oHk7H3oV+kjWDdZhIADa9GpnDyvEtpM9USg50jU/uDX6ylStgu2xsYj
3Gs7VivbsxbrNngjPjsYw4w+hJHzDIQdDcHEagXLVx+xA5HBs1C7eEm0mhuB5OCxqPqePM8Gk0KS
sXtYTVSQrwAkPhIA6T4Y5lgK5q3nITrdQ2zbI9f/eWssiIrE3j6m4vO30XFDEHZNbYiKRepiXlwM
lnUurSynvAKQ4Y9R1crAqvVqJObsRBf5YxNxnnW/hfDxnId6JUqJKPGH39a+qPKuPK8OpgZGYeu4
Wij38Pp+BwPg+TEADHwYAC8PA+DN8XsBIEe+H2Djxo04dOhQ4SlPz8sMAJsJQcgJnYvaHz1y+jv2
mOR3CEHzG8KoxQisWLIES3dsh+em+XB3tIXrgBlYt3QRlgcGwuOLnrAt5YIv4tKwb2INlC5iDLe1
yTiStBlrly7BNs8YpObsQ18RAPYt1yI2byd6VpDXY4SO80IRFzoJro+8AmA+3BOZUSvQtMyvpxUR
6xzulY3w6Y1g6jQZwecPI3TrEqxc44PAGD+s6m+DD4tURPvZAUg/GY9dy+dh1dYkJIRPR3vjkni3
SHtsOZqCFe5GqFhxGHxOx2Jq1bfx4SdOGLQgDEkpO7Fq9XrMHd0eDiZW6LHYHweifbFqznpEnDwJ
/ymNRABUwEDPDKRH78Wy/g1RzmgkPE/EYUatD1HisyYYsycOB0JWYNWaPfAM3oMFnWzFNhmh15pY
RHsNRTUlAOqLiEiH1/R6qKDett/GAHh+DAADHwbAy8MAeHP8kQD4I/MyA8DCtTM6NrDFRw9/xi+9
+wHM67RBh2Z1ULFxf8yZPQfz5o1DdxdjvCV2hLW6j8OiefPE6QPR2KSkuMxnqNGuI5o4lcH78vIV
66L/mC8wa9J0jB6zCH6pG9Dlo3fxqZEL2nRpBEvlZ/slYFazJdq2dEL5R94Vb1K3Azo2dkapR38s
8PY7MKrdFl0b1IRZ9cnwOLwfy0ePxpz58zGme0OYKuszR7f5++AbuhHzRk7G3Hkz0aP253hPWYc5
GnZtj7omJVC8uB2a9miLasqbCsWR/Mc10GP6TLH8Qkwe2BI2xYqguEl99Jw8H/Mn9EevPl3halsR
H4lly1bviKETZ2Nqt7r4tJQjGndtixrlC9bznrEbhk2fg7nzZ2Bouxooo1xvSVjXa4M2TexQWvmt
ivKo2bYDmlQtp/wYQb19v4EB8PwYAAY+DICXhwHw5ngTA+BVc50bj8PxC1BH47znVxSmtWbCP20b
uhW+B+BXZui+JAh+GzrD9LHTDRsD4PkxAAx8GAAvDwPgzfH3CABjdPhiA/b6BiAoLASHjsVinouV
cgStvfzzkK9MzEf4MW8MNn/yPAv0WR2J8L2DUFV5uV0fGADPjwFg4MMAeHmeDIAuXbpoPtHQq/f3
CICSsG/kji49eqFnzy5o1dAan2gu9yLeQrGSlqjuIp7kn/oDQsVQ0aY6qlephI8L/4iRHjAAnh8D
wMCHAfDyPBkA/L8B/nX4fwOk58UAeH4MAAMfBsDL8zAAjh49quw8Ll++jNzcXPoL/Pzzz8p98GfH
09PzDwXABAaAwatfsiwD4DkxAAx8GAAvjwyA1q3bqgHAMfz5owEgXwEoWqQoGbCGfAXguTEADHwY
AC+PDAD5PzpZvny58kdmyMCtWol58+ahnkuDZwZAcxEAIXZu8LBpgHUWtcmAbbdyQaS4L0fbMQD+
KAaAgQ8D4OWxtasCJ+fqcK5aA45VqpIOVK1WEw6OVTXvbxkATUQA7LVrhL32jeDl0JgM2D77xvAR
9+VQu9owZQD8IQwAAx8GwMslI8DaxkFwJF1wUO5TrftachCq2zsrqpHBk/djFcH2ifuZtDEADHwY
AEQvTu4orElXbASt+5qexgAw8GEAEBHRi2AAGPgwAIiI6EUwAAx8GABERPQiGAAGPgwAIiJ6EQwA
Ax8GABERvQgGgIEPA4CIiF4EA8DAhwFAREQvggFg4MMAICKiF8EAMPB5VgDIO3TdVg98XOIT5U4m
IiJ6VImPPsbStVtx92cGgEHOswLg8lf/h6RDJ7Fiw06s2+ZBRET0mBXrdyI+4xiuiP3Fo/sPBoCB
zLMC4OytByIC/qWUnXw1gIiI6FFy/3Dlq1+U/cWj+w8GgIHMswKAiIjoRTAADGQYAERE9DIxAAxk
GABERPQyMQAMZGQAyDvq6te/KHcaERHRn3Hlq3/h3tc/MQDe9OnZs9f3N25/jS+//Rm37/9ARET0
p9z75ifc+fJ79OvX/1+FuxrOmzjt2rW7PGDgwAcDBkgDiIiI/qSBDwYOHPTA3d39TuGuhsPhcDgc
DofD4XA4HA6Hw+FwOBwOh8PhcDgcDucNmiJF/j8Tzee/fz4lugAAAABJRU5ErkJggg==</Preview>
  <Form>4Pey1c2LVsEDACODCAAAAAAABADtnVlz4krSsO+J4D909K06TgICLV/MORG2scEGg2xjFt+8wSYWg8ACBOjX
f1UlYXbQhg3trInpmcLooSolpVJZWZn/y9e6zfp49F849OvX/6zOr/F82Pz398t8NG72/yl1tMZg
OvrnbqD3rX///Nr1pz+/ik191Blo/8b/idD//Pl1M+mNJ3rzX605GevV3p9fyqTW69QzzXlh8N7U
/q2JYjVRTwhRmY83I5L8+5dW7ZNfvhqNOi3tajj8/ave7vQaOvnu75uBNtYHvdFvNlQyWEUfDJv6
eL44aDIevNSrvWay029qdCDkq+KfX9HE/2Dx1WOHPg4azd//3ZFfOnrMdbX+fjPoDfTf/8Vjf37F
efJf8ehRN71OUxu/dEzyM/FoghwjR48eRMfz+7+XZmvQ/PV6/+eXPDw+PHJKmvbwbMFlO6328ePu
6wNtIWHy1+uOVtXn/11dXV1fXd1eXWUqV/R/76+SA538e9ci3Rv6D2lPV1cF+h32d7s9tG6uNlo4
ZP1vEoJo4VAgGKQhDWlIQxrSkIY0pCENaUhDGtKQhjSkIQ1pSEMa0pCGNKQhDWnnQZNAMQmNA10A
MATOAJEzdFjpk/9qQD5LAOgJTiV9lfa1Zf/z79bxhLZOWBDpEcJOgvr5C/Tv7PugGCIAL5GZKuRg
2gmgnelZQBrSkPZTaEyb8eNsFqTSNBwaqpAaVWsw01N9kKqzoQF3o2oZZrVUj36D/P1OFwowq3Lv
pG8MFfL3DOnXbujfZ/Tv7PvkeDI2i2ARLYL1jQwl3nwSVohTi0gJGQ2kCa+rRPvWCmSm0VGVAy5Z
MFUY8GMdpLyuES0dlwFkUPmvlRvSkIY0pHlvhshR/TcArlrv8YTW53MqJMZmGbhaPQrgpx8O+SBE
aL+RSoKWLrYgMYuFQxWVU5ulGgwHuRmIN88tleOGb12I1LiofXBUapJZqbx8YrkhDWlIQ5rnRvSu
Abd6NQ39lFyFRG8WDpUV7q1eNKFfvqvTT/z0ydh8Elb75LlQvqtBoj0tAVep3xn2N6KxisH1Wn2A
ycM8B7JyM1FhkuAKtrcieLkhDWlIQ5pnGvM1zDKxNtFmRslY0W++de6iT+zegLT4kedC+rpm9xuN
mAL6QCbWvCCMiA4W8kQHG9t28JmcBaQhDWk/i0a1kZQfDRSuUovqTvTbedi9Do5gdnG90U/D6C1z
A3L3YaoCLyvZIOS2pyENaUhD2vEmyqBC8iMBn74Gt/rtzOze/f22mtJgKkxU4EQtsRIn8f1nAWlI
Q9qPorGIgOkH0UYrvoa/ye5d7VNfxDhSUbho/74LiZxeBGICg/LtZwFpSEPaz6LRCAApo2vGuq/h
r7V7F/0GCLGcqoAaGRlECqb4F51TpCENaWdO46mv4eYjIW75Gv5Wu3e9/zFo8yCLz3MDZDI2xfyW
s4A0pCHtR9EWvobmLl/DX2/3Lvp6h9chPlafqdxEjjyLvvYsIA1pSPtZtIWvAXb7Gn6G3cv6bE8G
DMOheA7tXqQhDWmnpO2Pa/hxdi/bvTdJcMzuzY6FLzwLSEMa0n4UjQODh6kwbx3yNfwguzcR5SsA
mXBo/GEAZ3TdpYHwehaQhjSk/Sway9fwMh6oh30NP8buZXuRh5UHg8iNSxdN40vOAtKQhrQfRdvO
1/Al+u3M7V7WT4RDGjF/5TyMT30WkIY0pP0o2s58DT/e7iV9AzR+SPNbyur9VLF8Mic7C0hDGtJ+
Fs2lr+HH2b0xQqvoIHEwOuFZQBrSkPajaFZcg55JOvY1fL3du5kJ8sueC+QXB+XZkNq9pjJXTncW
kIY0pP0oGvM1xB61axBjnZ7CyYNEDYxqvkT63Z5B+2XSzxRBnNO/S4O3AhiZ1Cvpt8Ohz0+qmVdG
UBdHrBIYsfj59+GSsEokY7N+g3yDEDKU2Gl0Dc54TwMM76/Hdo50Rzo4wOcCeTKFQzTmjlNdlrtw
ehaQhjSk/UCakeAUiMtqATilHAHoRuWdfQVkKJsAalSiG45JPxyyPunSTxwQWH+NsEKMExr5xPoG
O4JlcpQ4UScfvhFMevShwkelEYPEcF5Wv8ru/YiPBRrnwPfjJzwLSEMa0pB2jjRWM5NV+uEELZGm
tYHap7Z7aV4zWXgzoBEOmVL3i2aKNKQhDWnnR5Oa5hBErt9XuTqtz3ZSu7fWuAOY116ovxd4CdDf
izSkIe3n0gwhX4bxW+fhxHYvrS0k9pvvCvOHGOWvnynSkIY0pJ0TTYaXOXBdNbbwDARv97LIiul7
JQ1S3hz+JXJDGtKQhjTvNLbux+IgTmX3WnuJ428RouDbvPGXyA1pSEMa0vzR5EJyYnDNZqpANWbw
dm8NhDu5akAn1ih/70yRhjSkIe1caH0+p9rxvswzELzd22yWysCPy0/fPFOkIQ1pSDsTmsh1eyA0
b+vG4T0WPuxevtgG2Xw2V6IaLl9uSEMa0pDmnZbWBYXT2mXFikI4gb93aJYBqpFH/ZtnijSkIQ1p
Z0KbCVwXhnGiJg/4GnzZvdV6FCA2Tma+eaZIQxrSkHYmNKlpDEBoEjV5snwOWk4FWX+a78iQfrly
QxrSkIY07zTnvgavdi/zNdQij7tLU1yq3JB24bSorNJVX1BBEvMmwKNZ5yE6rpHXPkMXiEkCyvEa
rhcxU6SdI82Vr8GT3Vule4djcjL7zTNF2g+mMWUqiUSXctlwqHtvwuvdQwHm00kWpHq6DZCaRZow
f+w9GJKsdAGq/fEIxFJsbEBEVgonHBvSfiLNra/Bg92rPasgG8/zb54p0n4mTQaVh3j+tq1Knft5
AW6eRo+ENq0/3BjS/U3LYJ/A9D2bVKz+9fQ9Y/+9eDfrQiX23AOZWMR78o2cy0yRdkk0974Gt3bv
MMJ8DfXDZTAvTW5IuxRaLSYbcql014Xrp/o9TAePSVXKhEPJKx5uWtPc4pOdfaaTW5kbkFMvt5rl
oAhwbLsb0n4AbSbmNde+Bld2r+1rSO/1NXzRTJH2g2mDTKoNU+n51lhq1E+7N33zpK/o2NX+ig6+
GmQh0su+ALTi+WSAY9vVTkATOLVrZSiE9EhQLC8je+OFJLG+YMr6+Y0++zu1zixNQY+nNEJQ6Sdr
31gjJGC1bxEsojlYHq+RsdljWn5jcwzLPvs7p6qx08qNSIqnYwyH6CidjMmWwuesdsmZji35KclE
Tn8FoXRTV9z5GlzYvQ58DcHKDWlI22hcuh1XpXkuWYbrVusBZu+1tCJx4dDTbRqqsdkY4pPHrsol
2/cFKLzKTzB7Kt2B7YtY2sEPN1MTavz1DKAb5zZ8D2cx0720uGxWQMwU2yo3e48rMHrL34CYemkZ
pE8eKqO3zP6+9f0kOb7QAm4eDi0/SRUcEVif/SIjsOOH1vHhEPnE/o0jBHqEDC/mgSyzAciNS5ci
Cmf2KmVCOz6rzGJWs+WsMsv+ipyJ3BZyEGI5VeHqjX7ac/bdY3av7WvYE9dwArkhDWmbjUUpdCof
WYhFJzWAq2k9DWKTH1MaT+sorrTsXDK41qCahoebimbbwUvfA9PaXHRcqwUztr0tQJqsP4VDc/pG
2xNtr+JKZUYPfTI2n4TVPrHfHB1BdQu8TsUT+y3L88c0jYRt0hGEQyUjmFnukJvP7LsH7V5rD8WB
uIbA5YY0pO1s1N9L3rkNx/sohebgQ5Eqqbax6ntgvojX6HPR0tHBjG13C4xWpass9D7NqV9Rbzd4
+83WJT0eoo958bRyi0rda7teZdD1KL9Sbgf2UJxGbkhDWkC0BNXStVLCsOMeNu1e2dC3lcA5zjQ2
TmfJXWmS+9TlSs6hPrXfgtFGTv2WDw0rq+JJ5Sar91OVFUwLuh7ll8ptd76GE8oNaUgLkiaZj6Yq
te47yqrdy/y/9fKDCWBu1bY6u5nK+jPzNEThUu03S5fMyyr1NTjTJZ7lVp4/Jq3kjUHlafwOue3N
13AyuSENaUHSmBO41BvX7TiIZZyDWeHzCnQT+e09Fmc2U+ZrWHgaLtF+W/M1CKeVm+1rMDffDi5M
bh58Df7khjSkBU5LTOqaIj0mW2DHOTDfQyl1rcGk9rFTE5zTTBe+hkv3Wzr3NfiQm+1roJGwXvcv
nIPcvPkaXMttKEx0mJP3QhA+Pj6AK/cfuvCeeHm17hkuManphBYb61XyMhGV1ePI/c0QOQAhHKI+
QGt7vy5wBpBPPTxe7BbgfaryMqWxMQkbYzyQh8Ca1cb3WZ/NVNhDdN3fkpszAhnfieW2SmPn0hoD
M3nv53UN0s9Sa8vfG29SN8RhWrBjc99k/dlULF/DhdpvC1+DAa+zrLu7zLXcyvN6Gvr8886VyIuR
m+u4Bhdy45KtuMKlO/ddUApxgFm8da9KT7dtBW6mkbztj2N2yt1zvQLz1kc4lCEPzeJdGfoP/TeQ
+QbvSgfTtXHurj2okbfPGZVbdNYsG3KtXOStPf6uiY5m6rAxTZF4KfZUuUqukDsTysWECtFEq6LI
jXIsCXpVmGwfl55JqiypZRFK0WjTnlO9XBShfJcg/WiTrsvITUoox+7aELtuVwy5VelnoZJ66JB+
h/VLWfL36zY5QiW/WC/3wCYwYoP1e3KLyo18W7WOWCMw4l3H/jv7xVJ01gB+LKkqTCXlxPsXnsOh
SCMN1VRvaM+yXekrULwrluz4XhbPa9m91Pcgv7xGCyArhcgu3Jno3mqkbsJmVMMl2W8LX4MI0fqL
dFq5RSXtZjWu4ULtXmsPxZOTPRQu5CaV72aqBE+v2ZV7YPWe2NwLutyPHw5ZO/Kn+SRYcfXvD6ln
27w51pjFWOPvZjB9Sl2DlAqHaHwRi8yfjnJJg2tob0cDXtzM1E2TRZUHafpYyML1VSX9uT8rdXOl
QXJ2+wJCbKJvGwwDId+FXLISs2fFYqZW8haw/kJuy0/89G25OTqCjYnPJzUg4xycQG629EAVoZEu
xqjcXtM3ytaYNvcWs+vpYf7+Qd5Py9E92HPQvbFx+nHV13Bx9tvCb9kEuXxnHNhDEYDcZDUzNbha
I5X0vA54DnJzlq/Bhdxk7S1mSKJS4O17YqeOTS/1YeX+Rl3fCxoOre0GnUaUW0V+eu1lITI+kI5q
0cSMOQLp9e659rn/dBnjWSnlugBagvsGu5fT9YwJt+2n4uKN2M5LwNaCnqI5Y8emK9KYPjMr8fxC
TnvyGKzI7VimAwf9T7kdO4KNKd8dScBpQ2GPXP3rNz7HN2Aenz4SjUqeC+v71g6Mke5G5nrDj+09
FcGNzSdNNrZ8DRdmvy38lgYUZzX+tHKrzEcK9TW0PK8DnoPcHOdrcCI36oeUY/Rlfms/PbsH2D6j
t9TMBCVyfQ3R3GtRlZXXYhpy5rsAs1Y1Zb8rkjuL6dzlbtDb58dXEPofH8cfEe90JTufJMRpne1s
WtFvLN+gFa7vZ6auG/NK1lLRydpuK1u/0VHKs7qWZR7grWM5VUuAFM2Z3T3PsqV9t5Ab+w1rV62P
vq3fjhzBMtyYrUTesGzzQOW2bMxHs1xB23gusDGt5DXbeC4wP5PlJz/F2PzSart8DZdkvy38ltTX
UNq+ggOVW+xRT1JfQ8X7OuA5yM1FvoYjrRwO0WWxzHw63tQu1j0gPxZeRTCyMRk4fiyqQMy7rpUd
kFMHgkLUyigLDa0dh3llEA5l1JVsgNFok9jmM8lw8IhQTAn4B7OhLO/Cz/tUuX3OwvCjqvmZqvv7
ND7JdohVG8utZRlgdm8hHKLW+UjP71tYm1CF8fzevt9+p2aERnqehAZP5BavpsOhjmL5udsV8iCL
l1Jtw3ufzPToES+3bZVraENxry/Vu9xYY0t3cvrlVVt78tjPU7peMH/Xs4okKEkTHjqtIfuGLSdy
BHmfeKWxZe+J5s4UZn7GFghtM67h4uy3dV+Dj7VxB3Jz4Gs4f7kNI3Rdxr+vgTZNuGlT/RZ/ut2y
c+WrJ3L5E23bPM5h69TZuUTlVuw1KmBezR6ps27kJvaCm49EBe6uK+X193p258Yaw6r6pXEO4s1s
pEqFhf9j1UrNdVsJQuMKvcShK5bFg2ztkbXeBmavJSs+xNPYjrTvp3HRsV6Du3brbS1qgVi5hDZ/
1TLkRM9GNZCU5AzE1HxkrMqJHfF611ZhLHbiQY8tENqOuIYLs98sbTJnvobs8QohvuRWnteze+Ma
LkRuzNMQDvmJa2CNviHz17P657rMyrseszFZ9j+3jTNH4RBRn0okl7TsWBeNmdPUM7ph9zJbfJ5L
FiDeTLsf00pzemfR3VOWJ2HFf7J8Q2ZyA4nQDte0YROq888Ra51wy4czyHQMmNf1jJuxOWvfSEtw
qgZvqWJ/29pnUQtaOFRNaatXB4tdzJsRbmtPhRV7EdzYjjbHtJ1xDZdjvy38liyu4fHF+/K1I7kd
i2u4CLmxHRQGy4/kp5WjsiE/08gdalF+vtczjXc/f+2TN5BS1KN56fVeYPrOqKfTq/rugTwXPj3G
O2MIgh8b8znnzPfEdjatx+KdYdnmDmksRk++fooou7V49KFQVKwA279D95py8olYtf2HbR+NtUMi
24lv0KgOjsnTurp6BNPSN8+3BRAn4o6YPS9jc9Ic+i2P+BrO3H779FvaeyhOK7cDeyguR27LHRS+
rjcWwfn82vj0Qq6815txeLJ1gdfmfWy6eDO19Nsymm0RxyWPa32R3qeeVwOcjW2UTc02x2Cv+8Xz
BR2IXn53TqNtku0nYH7Vud/OS5tLzpLQGuRv6ZOHWtF+5rbevkX3xjPJ1tZqgbVi9hzpEes+Sa69
bRo3/KjqcHt9X1j1ybD6bZKanh+RypfPdCVfw5fYbyyPI62uQO03Y+0Tb32WGXJO9JsKhanubT+W
Y7mVWL4GOzek0zEyubmY1Ynt3rVsDd6vt8Sk1geznsgby4inT/1mxbAbtb3Z6Z00r+syxCAyrIiA
FQvRXq/PFepx4MqHfav+xsasr4RRV7Y05D3VBA2+ndjMOutkpnR93lrfSravnjc9nzCLqPcsL235
ku1ervCeUKRE3jS3rPvkk/QEic5bf6/cYjntzV5z27CUucdu5fjL8BfLbS1fw0nsN5ZLQSs3upBI
xN8UrtlMFUDT2u/Uflv/xGNfbZbo9RYdeY9rcCa3WN24BeFaeAN3YwyHHM+KyYnm/TmZ3buRrcHj
9UZ3hBmSnn0RV+8R299bvHsr7w6Uctd8xHH15enmez6hWW/6s1HNdzDdvrFxSjcOUiTXVWEzPu5u
9l4lr73SrnhzZzMVJvqHFZO3Q6uTfr47lci5rYZDMf9Lpy7HFgSNaw8+FNtqJRpz1aNiXs0fd1xS
qzSrolsxuhaDx6yCQu/6CaAQkc/I7nXqa/Bo994ZMEiPNZAmMV2x1r+i9bwIcvl2AlAMh+hOX7br
jHxifH5jq/95hPV9Rkgu++T7HN8Ph+Knvd44cUBspRKNGF4dE83Cvjore0zi6hzIc2HPLNdmIc3j
usG11ZK2sOYDt3u3szV4ut4aRPNCZh5Zi1O1/b3R5xIx5DeLCXhqHu8FgZuOlK2YAvu5wKJrLVeI
lXKAhXuy4bJQN+v+PtBn3xc5MrY1Am3chG64W90zsfTAJK6eVBgKzd2BbY5nej9/1CDTGY22Y/jo
L8o9ahaGQwfSQLhuX6CR5jRu8LWXe91eU2NRMommZuwMzF2ndePc09paJD37zEcDT5Fc2tvYPLdD
fkvnvgYPdi+ttyCUyD8wTkwWjxsiO5Ver9YVTMdmpcBYXsH7+uwIeYMgr37/9HJzP6Z99+naNxZP
8qkwUR1VvPRs9+7MDOlebkTvNmA+GmeNrRWNQjhULNZsJeW/eTqnnfgkSz0L/A67l92HskbXxtlu
Y7ouo8gT6hlhebZjs0nNkEe1Ek919Jj0x6zfF8nfZfL3BP0+W8ULh1jVL7ayQz4pp0FJxmHNE7DU
iKKa5g8F9TueKbliEh/VPmw9WZY7TxIlYtX0jL3JbFy3U99ZBnkQwmzUSKurfnEmR/X+JfsZvXGE
RveuG1I93RZX5ZJNPonQGx4I6j04Nj9tL82Vr8Gt3ct0R69VItfKpPu+ZwSX7JUKnMZqZApNIrzj
lYA82r12XMNmZkiXM5XNBq9KevaGX/M1sEosvecipfnaLuZnbLTt97XacQ5BZTogtLVPdlmhUjn1
rO/NWOhppizh91upoW1reTaCfuaG1o2dPRbuXMvO79jc0tj+FxabuHMXWqk4rh3zXH3S2IvM0+1D
ctVyZnvVo423kr2Hx8XYAmh7/JZ78jUEYvcy3TGskH84UUucth7lX0KjtZU5rV1WVmrKBWv37q94
6WqmdT5nkjfe9V1r1p6zOxrhFAuHZGP/fnm3zVMcvjHKJq3dBhvaKew0L4GjPl25O5zZgNnBXJfu
1gtypnK3ElOleL6rb61GXU9pDfQhsfAL5FLynKrC+9ic02i2D1UaZ83kll/cigKcj3UHw7dp9I2C
L8Yaa1p8+SyKyup52L0O9lD4sHuXvoZJgjuc7uSStWWANFb73YmvwbPdezBbg/OZEnO2DvPBxioy
8zU8v/YUkNVa7LvPwu59u2v7T9n7qF+7t0Vo2zumV7yM/JBu4XPsfHE3U/2DGHlWlfTNfHDsHTsc
UssJDvwF+HkcmxMa9/z+loXkVVxZf3JQv/iUU45khNg1tt2edhYZIaQ6A4dSOPHVezBfg1+7d9XX
oO71NXzRTC+C5sbX4NHuPZKtweFMWbiYNMzMzW1fw91DYZHf/HvPws49Fav7T837SE6lKzc6NLWx
RDWkqshCkzeP9A3aF629UfL7G4urse/0dZ07q7+lDE6YHKmD7WemVKPK8WZZX817vDKCUSMcStNo
Dj2YIN/AzulYbNL3hd1ZKegsuAfHanJtbORtrGHlR9qyClg+X2dJR0979RLbx5OvwZHd69jX8BUz
vQyaO1+DF7v3eGZIRzNlLtzMy/rquuVruH55heVL3XefhZGYN/dkzU6HQy+vOg2xn/kZk56JjWF2
9UJ075rdy3SJTKMLEtzuzLWHmruZJvLlHkSeU8+wlUvSzmOmFOQrkEX60PDdgjmn5MxEYPZaDodS
a9Y6u566Dy81iOTSz17GRj3CcqXU01djy5gcsi9xg7x7tOIOH0Inu3oP5IYMwO514Ws4+Uwvg+ba
1+Da7nWUGfL4TGPUhbsVsc702ZPla1gmo/7Ws0Dj8lUpRjN3b/oQafUYQpO0By9V6Fhjq3hDvaYs
8pNvajyWfc1jcJ1buVk1zu9fHt935Yuj+Xst+9/v7hYvY9sYKU19GStqb7BDblYm5dhzz2smZWts
LKP+puedPB9vgRvrH86jPU509TrK1+DV7nXnazjxTC+C5sXX4NLudViF4shMyS3MK9LHTl9DMUd9
DWtRDd94Fuw6Fdez3dkruWw41L33GPrGZemOCTNXKH9KgeUnt/ZM0ApHYik29mFjupQbXVuKz3Nd
w8pVtBlrFg6xnF9CqTf8XrtXTj9HVKn3MO/ukhvNMSdm5iN/Y5NqqRlsxZaxK5RdDS6ehqe4er3G
NTiye137Gk4508ugefM1uLF72R6KnXENrmZ6NK5hM6rhW8+Clafx5e66vHUXFt7lJ0pzmQ6NNW5O
Paeb6zh2fnKzJeQN6B3KCuukuZYbixWmVei2nzT2OiB5UtQgmiu8+hqYl7HZjbvvVLQd8SHs+onk
7p4N34uBNNNd3gTl/fp6LbaMrdrR+h7uzOnAr14Peyhc2L0efA0nm+ll0Dz7GhzbvTv3ULifqVWb
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</Form>
  <Code><![CDATA[
$AssignApp_Load={
	#TODO: Initialize Form Controls here
	
	function Get-IntuneApp
	{
		
    <#
        IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
        .DESCRIPTION
        Retrieves Intune managed app.
        ===========================================================================
        .PARAMETER App
        Required if not using All switch - Name of the app to retrieve.
        .PARAMETER All
        Retrieves all Intune managed apps.
        .PARAMETER Status
        Returns device install status for the specified app.
        ===========================================================================
        .EXAMPLE
        Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -Intent Required <--- Assigns AAD group Intune-7-Zip to 7-Zip app and sets it to require install
        Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -RemoveAssignment <--- Removes Intune-7-Zip group assignment from 7-Zip app if it exists.
    #>
		
		[CmdletBinding()]
		param (
			[Parameter()]
			[String]$App,
			[Parameter()]
			[Switch]$All,
			[Parameter()]
			[Switch]$Status
		)
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader(); 'ConsistencyLevel' = 'eventual' }
		
		If (!$App -and $All)
		{
			
			$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps"
			Try
			{
				
				$AllApps = Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET
				$Apps = $AllApps.value | where { $_.appAvailability -notlike "*global*" }
				Return $Apps
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
		}
		elseif ($App -and !$All -and !$Status)
		{
			
			$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps?`$Filter=displayName%20eq%20'$App'"
			Try
			{
				
				(Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET).value
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
		}
		elseif ($App -and !$All -and $Status)
		{
			
			$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps?`$Filter=displayName%20eq%20'$App'"
			Try
			{
				
				$IntuneApp = (Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET).value
				$IntuneAppId = $IntuneApp | select -expand id
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
			Try
			{
				
				$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps/$IntuneAppId/deviceStatuses"
				(Invoke-RestMethod -Uri $Uri -Headers $Header).value
				
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
		}
		
	}
	##############################################################
	$global:AllApps = Get-IntuneApp -All | sort -Property displayName | select -expand displayName
	$buttonAssignApplication.Enabled = $false
	$Apps = Get-IntuneApp -All | select -Expand displayName
	foreach ($item in $AllApps)
	{
		
		$listboxApps.Items.Add($Item) | Out-Null
		$listboxApps.Sorted = $True
		
	}
	##############################################################

	$Uri = "https://graph.microsoft.com/v1.0/groups"
	$Groups = while (!$NoMorePages)
	{
		$GetGroups = Invoke-RestMethod -Uri $Uri -Headers $Header -Method Get
		$GetGroups.Value
		If ($GetGroups."@odata.nextlink")
		{
			$Uri = $GetGroups."@odata.nextlink"
		}
		else
		{
			$NoMorePages = $True
		}
	}
	$NoMorePages = $false
	$Groups | select -expand displayName | sort displayName
	$listboxGroups.SelectionMode = 'MultiExtended'
	
	foreach ($Item in $Groups)
	{
		$listboxGroups.Items.Add($Item.displayName) | Out-Null
		$listboxGroups.Sorted = $True
	}
	##############################################################
	$comboboxIntent.Items.Add('Required')
	$comboboxIntent.Items.Add('Available')
	$comboboxIntent.Items.Add('Uninstall')
	$AssignAppLogFolderExists = (Test-Path -Path "$Env:ProgramData\AzureAdministrator\Logs\AssignApp" -PathType Container)
	If (!$AssignAppLogFolderExists)
	{
		
		New-Item -Path "$Env:ProgramData\AzureAdministrator\Logs" -Name 'AssignApp' -ItemType directory -Force
		
	}
}


$buttonAssignApplication_Click={
	#TODO: Place custom script here
	function Assign-IntuneApp
	{
		
    <#
		IMPORTANT:
        ===========================================================================
        This script is provided 'as is' without any warranty. Any issues stemming 
        from use is on the user.
        ===========================================================================
		.DESCRIPTION
		Adds or removes Intune App assignment using AAD group.
		===========================================================================
		.PARAMETER App
		Required - Name of the app to assign.
		.PARAMETER Group
		Required - Name of the AAD group being assigned to the app.
        .PARAMETER Intent
        Required if not removing assignment - Intent of the assignment. Can be required, uninstall, available (lists in Company Portal), and availableWithoutEnrollment
        .PARAMETER RemoveAssignment
        Optional switch to remove group assignment from Intune app.
		===========================================================================
		.EXAMPLE
		Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -Intent Required <--- Assigns AAD group Intune-7-Zip to 7-Zip app and sets it to require install
        Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -RemoveAssignment <--- Removes Intune-7-Zip group assignment from 7-Zip app if it exists.
	#>
		
		[CmdletBinding()]
		param (
			[Parameter(Mandatory = $True)]
			[String]$App,
			[Parameter(Mandatory = $True)]
			[String]$Group,
			[Parameter()]
			[ValidateSet("Required", "Uninstall", "Available", "availableWithoutEnrollment")]
			[String]$Intent,
			[Parameter()]
			[Switch]$RemoveAssignment
		)
		
		$token = Get-MsalToken -clientid $ClientID -tenantid organizations
		$global:header = @{ 'Authorization' = $token.createauthorizationHeader(); 'ConsistencyLevel' = 'eventual' }
		
		function Get-IntuneApp
		{
			
        <#
            IMPORTANT:
            ===========================================================================
            This script is provided 'as is' without any warranty. Any issues stemming 
            from use is on the user.
            ===========================================================================
            .DESCRIPTION
            Retrieves Intune managed app.
            ===========================================================================
            .PARAMETER App
            Required if not using All switch - Name of the app to retrieve.
            .PARAMETER All
            Retrieves all Intune managed apps.
            .PARAMETER Status
            Returns device install status for the specified app.
            ===========================================================================
            .EXAMPLE
            Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -Intent Required <--- Assigns AAD group Intune-7-Zip to 7-Zip app and sets it to require install
            Assign-IntuneApp -App 7-Zip -Group Intune-7-Zip -RemoveAssignment <--- Removes Intune-7-Zip group assignment from 7-Zip app if it exists.
        #>
			
			[CmdletBinding()]
			param (
				[Parameter()]
				[String]$App,
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[Switch]$Status
			)
			
			
			If (!$App -and $All)
			{
				
				$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps"
				Try
				{
					
					$AllApps = Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET
					$Apps = $AllApps.value | where { $_.appAvailability -notlike "*global*" }
					Return $Apps
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
			}
			elseif ($App -and !$All -and !$Status)
			{
				
				$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps?`$Filter=displayName%20eq%20'$App'"
				Try
				{
					
					(Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET).value
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
			}
			elseif ($App -and !$All -and $Status)
			{
				
				$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps?`$Filter=displayName%20eq%20'$App'"
				Try
				{
					
					$IntuneApp = (Invoke-RestMethod -Uri $Uri -Headers $Header -Method GET).value
					$IntuneAppId = $IntuneApp | select -expand id
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
				Try
				{
					
					$Uri = "https://graph.microsoft.com/beta/deviceAppManagement/mobileApps/$IntuneAppId/deviceStatuses"
					(Invoke-RestMethod -Uri $Uri -Headers $Header).value | select id, deviceName, deviceId, lastSyncDateTime, InstallState, installStateDetail, errorCode, userPrincipalName
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
			}
			
		}
		
		###########################################################
		
		function Get-AADGroup
		{
			
        <#
            IMPORTANT:
            ===========================================================================
            This script is provided 'as is' without any warranty. Any issues stemming 
            from use is on the user.
            ===========================================================================
            .DESCRIPTION
            Gets an Azure AD Group
            ===========================================================================
            .PARAMETER All
            Lists all AAD groups by displayName.
            .PARAMETER Name
            The displayName of the group to get.
            ===========================================================================
            .EXAMPLE
            Get-AADGroup -All <--- This will return all AzureAD groups
            Get-AADGroup -Name Azure-Test <--- This will return the group Azure-Test
        #>
			
			[cmdletbinding()]
			param (
				
				[Parameter()]
				[Switch]$All,
				[Parameter()]
				[String]$Name
				
			)
			
			
			If ($All)
			{
				
				$uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					Try
					{
						
						$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
						
					}
					catch
					{
						$ResponseResult = $_.Exception.Response.GetResponseStream()
						$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
						$ResponseBody = $ResponseReader.ReadToEnd()
						$ResponseBody
					}
					
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | select displayName | sort displayName
				
			}
			elseif ($Name -ne $Null)
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/groups"
				$Groups = While (!$NoMoreGroups)
				{
					
					Try
					{
						
						$GetGroups = Invoke-RestMethod -uri $uri -headers $header -method GET
						
					}
					catch
					{
						$ResponseResult = $_.Exception.Response.GetResponseStream()
						$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
						$ResponseBody = $ResponseReader.ReadToEnd()
						$ResponseBody
					}
					
					$getGroups.value
					If ($getGroups."@odata.nextlink")
					{
						
						$uri = $getGroups."@odata.nextlink"
						
					}
					Else
					{
						
						$NoMoreGroups = $True
						
					}
				}
				$NoMoreGroups = $False
				$Groups | where { $_.displayName -eq $Name }
				
			}
			else
			{
				
				Write-Host "Please specify individual group or use All switch."
				
			}
			
		}
		
		###########################################################
		
		$AppId = Get-IntuneApp -App $App | select -expand id
		$Target = Get-AADGroup -Name $Group | select -expand id
		If (!$RemoveAssignment)
		{
			
			$Uri = "https://graph.microsoft.com/v1.0/deviceAppManagement/mobileApps/$AppId/assign"
			$Body = @{
				"mobileAppAssignments" = @(
					@{
						"@odata.type" = "#microsoft.graph.mobileAppAssignment";
						"intent"	  = $Intent;
						"target"	  = @{ "@odata.type" = "microsoft.graph.groupAssignmentTarget"; "groupId" = $Target };
						
					}
				)
			}
			$JSON = $Body | ConvertTo-Json -Depth 3
			Try
			{
				
				Invoke-RestMethod -Uri $Uri -Headers $Header -Body $JSON -Method POST -ContentType "application/Json" | out-null
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
		}
		else
		{
			
			$AppId = Get-IntuneApp -App VMWARE | select -expand id
			$Target = Get-AADGroup -Name '~Intune-Test' | select -expand id
			$GetUri = "https://graph.microsoft.com/v1.0/deviceAppManagement/mobileApps/$AppId/assignments"
			Try
			{
				
				$Get = (Invoke-RestMethod -Uri $GetUri -Headers $Header -Method GET).value
				
			}
			catch
			{
				$ResponseResult = $_.Exception.Response.GetResponseStream()
				$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
				$ResponseBody = $ResponseReader.ReadToEnd()
				$ResponseBody
			}
			
			$Id = $Get.id | select-string -pattern $Target | foreach { $_.Line }
			If ($Get.id -like "*$Target*")
			{
				
				$Uri = "https://graph.microsoft.com/v1.0/deviceAppManagement/mobileApps/$AppId/assignments/$Id"
				Try
				{
					
					Invoke-RestMethod -Uri $Uri -Headers $Header -Method Delete | out-null
					
				}
				catch
				{
					$ResponseResult = $_.Exception.Response.GetResponseStream()
					$ResponseReader = New-Object System.IO.StreamReader($ResponseResult)
					$ResponseBody = $ResponseReader.ReadToEnd()
					$ResponseBody
				}
				
			}
			
		}
		
	}
	##############################################################
	Start-Transcript -Path "$env:ProgramData\AzureAdministrator\Logs\AssignApp\AssignApp_$Timestamp.log"
	$Intent = $comboboxIntent.SelectedItem
	$Groups = $listboxGroups.SelectedItems
	$App = $listboxApps.SelectedItem
	
	foreach ($Group in $Groups)
	{
		
		Try
		{
			
			Assign-IntuneApp -App $App -Group $Group -Intent $Intent
			
		}
		Catch
		{
			
			[System.Windows.Forms.MessageBox]::show("Error assigning app.`r`nError Message: $($_.Exception).`r`nFor more info, see logs.", 'Error', 'OK', 'Error')
			
		}
		
	}
	Stop-Transcript
	$AssignApp.Close()
}

$listboxApps_SelectedIndexChanged={
	#TODO: Place custom script here
	If (($listboxDevices.SelectedItem -ne '') -and ($comboboxIntent.SelectedItem -ne '') -and ($listboxGroups.SelectedItem -ne ''))
	{
		
		$buttonAssignApplication.Enabled = $True
		
	}
}

$comboboxIntent_SelectedIndexChanged={
	#TODO: Place custom script here
	If (($listboxDevices.SelectedItem -ne '') -and ($comboboxIntent.SelectedItem -ne '') -and ($listboxGroups.SelectedItem -ne ''))
	{
		
		$buttonAssignApplication.Enabled = $True
		
	}
}

$listboxGroups_SelectedIndexChanged={
	#TODO: Place custom script here
	If (($listboxDevices.SelectedItem -ne '') -and ($comboboxIntent.SelectedItem -ne '') -and ($listboxGroups.SelectedItem -ne ''))
	{
		
		$buttonAssignApplication.Enabled = $True
		
	}
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>